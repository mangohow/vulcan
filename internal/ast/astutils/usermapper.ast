     0  *ast.File {
     1  .  Doc: nil
     2  .  Package: 1:1
     3  .  Name: *ast.Ident {
     4  .  .  NamePos: 1:9
     5  .  .  Name: "mapper"
     6  .  .  Obj: nil
     7  .  }
     8  .  Decls: []ast.Decl (len = 11) {
     9  .  .  0: *ast.GenDecl {
    10  .  .  .  Doc: *ast.CommentGroup {
    11  .  .  .  .  List: []*ast.Comment (len = 1) {
    12  .  .  .  .  .  0: *ast.Comment {
    13  .  .  .  .  .  .  Slash: 3:1
    14  .  .  .  .  .  .  Text: "//go:generate ${GOPATH}/bin/vulcan gen db"
    15  .  .  .  .  .  }
    16  .  .  .  .  }
    17  .  .  .  }
    18  .  .  .  TokPos: 4:1
    19  .  .  .  Tok: import
    20  .  .  .  Lparen: 4:8
    21  .  .  .  Specs: []ast.Spec (len = 4) {
    22  .  .  .  .  0: *ast.ImportSpec {
    23  .  .  .  .  .  Doc: nil
    24  .  .  .  .  .  Name: nil
    25  .  .  .  .  .  Path: *ast.BasicLit {
    26  .  .  .  .  .  .  ValuePos: 5:2
    27  .  .  .  .  .  .  Kind: STRING
    28  .  .  .  .  .  .  Value: "\"github.com/jmoiron/sqlx\""
    29  .  .  .  .  .  }
    30  .  .  .  .  .  Comment: nil
    31  .  .  .  .  .  EndPos: -
    32  .  .  .  .  }
    33  .  .  .  .  1: *ast.ImportSpec {
    34  .  .  .  .  .  Doc: nil
    35  .  .  .  .  .  Name: nil
    36  .  .  .  .  .  Path: *ast.BasicLit {
    37  .  .  .  .  .  .  ValuePos: 6:2
    38  .  .  .  .  .  .  Kind: STRING
    39  .  .  .  .  .  .  Value: "\"github.com/mangohow/vulcan\""
    40  .  .  .  .  .  }
    41  .  .  .  .  .  Comment: nil
    42  .  .  .  .  .  EndPos: -
    43  .  .  .  .  }
    44  .  .  .  .  2: *ast.ImportSpec {
    45  .  .  .  .  .  Doc: nil
    46  .  .  .  .  .  Name: *ast.Ident {
    47  .  .  .  .  .  .  NamePos: 7:2
    48  .  .  .  .  .  .  Name: "."
    49  .  .  .  .  .  .  Obj: nil
    50  .  .  .  .  .  }
    51  .  .  .  .  .  Path: *ast.BasicLit {
    52  .  .  .  .  .  .  ValuePos: 7:4
    53  .  .  .  .  .  .  Kind: STRING
    54  .  .  .  .  .  .  Value: "\"github.com/mangohow/vulcan/annotation\""
    55  .  .  .  .  .  }
    56  .  .  .  .  .  Comment: nil
    57  .  .  .  .  .  EndPos: -
    58  .  .  .  .  }
    59  .  .  .  .  3: *ast.ImportSpec {
    60  .  .  .  .  .  Doc: nil
    61  .  .  .  .  .  Name: nil
    62  .  .  .  .  .  Path: *ast.BasicLit {
    63  .  .  .  .  .  .  ValuePos: 8:2
    64  .  .  .  .  .  .  Kind: STRING
    65  .  .  .  .  .  .  Value: "\"github.com/mangohow/vulcan/internal/example/model\""
    66  .  .  .  .  .  }
    67  .  .  .  .  .  Comment: nil
    68  .  .  .  .  .  EndPos: -
    69  .  .  .  .  }
    70  .  .  .  }
    71  .  .  .  Rparen: 9:1
    72  .  .  }
    73  .  .  1: *ast.GenDecl {
    74  .  .  .  Doc: nil
    75  .  .  .  TokPos: 11:1
    76  .  .  .  Tok: type
    77  .  .  .  Lparen: -
    78  .  .  .  Specs: []ast.Spec (len = 1) {
    79  .  .  .  .  0: *ast.TypeSpec {
    80  .  .  .  .  .  Doc: nil
    81  .  .  .  .  .  Name: *ast.Ident {
    82  .  .  .  .  .  .  NamePos: 11:6
    83  .  .  .  .  .  .  Name: "UserMapper"
    84  .  .  .  .  .  .  Obj: *ast.Object {
    85  .  .  .  .  .  .  .  Kind: type
    86  .  .  .  .  .  .  .  Name: "UserMapper"
    87  .  .  .  .  .  .  .  Decl: *(obj @ 79)
    88  .  .  .  .  .  .  .  Data: nil
    89  .  .  .  .  .  .  .  Type: nil
    90  .  .  .  .  .  .  }
    91  .  .  .  .  .  }
    92  .  .  .  .  .  TypeParams: nil
    93  .  .  .  .  .  Assign: -
    94  .  .  .  .  .  Type: *ast.StructType {
    95  .  .  .  .  .  .  Struct: 11:17
    96  .  .  .  .  .  .  Fields: *ast.FieldList {
    97  .  .  .  .  .  .  .  Opening: 11:24
    98  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
    99  .  .  .  .  .  .  .  .  0: *ast.Field {
   100  .  .  .  .  .  .  .  .  .  Doc: nil
   101  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   102  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   103  .  .  .  .  .  .  .  .  .  .  .  NamePos: 12:2
   104  .  .  .  .  .  .  .  .  .  .  .  Name: "db"
   105  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   106  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   107  .  .  .  .  .  .  .  .  .  .  .  .  Name: "db"
   108  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 99)
   109  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   110  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   111  .  .  .  .  .  .  .  .  .  .  .  }
   112  .  .  .  .  .  .  .  .  .  .  }
   113  .  .  .  .  .  .  .  .  .  }
   114  .  .  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   115  .  .  .  .  .  .  .  .  .  .  Star: 12:5
   116  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   117  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   118  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 12:6
   119  .  .  .  .  .  .  .  .  .  .  .  .  Name: "sqlx"
   120  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   121  .  .  .  .  .  .  .  .  .  .  .  }
   122  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   123  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 12:11
   124  .  .  .  .  .  .  .  .  .  .  .  .  Name: "DB"
   125  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   126  .  .  .  .  .  .  .  .  .  .  .  }
   127  .  .  .  .  .  .  .  .  .  .  }
   128  .  .  .  .  .  .  .  .  .  }
   129  .  .  .  .  .  .  .  .  .  Tag: nil
   130  .  .  .  .  .  .  .  .  .  Comment: nil
   131  .  .  .  .  .  .  .  .  }
   132  .  .  .  .  .  .  .  }
   133  .  .  .  .  .  .  .  Closing: 13:1
   134  .  .  .  .  .  .  }
   135  .  .  .  .  .  .  Incomplete: false
   136  .  .  .  .  .  }
   137  .  .  .  .  .  Comment: nil
   138  .  .  .  .  }
   139  .  .  .  }
   140  .  .  .  Rparen: -
   141  .  .  }
   142  .  .  2: *ast.FuncDecl {
   143  .  .  .  Doc: nil
   144  .  .  .  Recv: nil
   145  .  .  .  Name: *ast.Ident {
   146  .  .  .  .  NamePos: 15:6
   147  .  .  .  .  Name: "NewUserMapper"
   148  .  .  .  .  Obj: *ast.Object {
   149  .  .  .  .  .  Kind: func
   150  .  .  .  .  .  Name: "NewUserMapper"
   151  .  .  .  .  .  Decl: *(obj @ 142)
   152  .  .  .  .  .  Data: nil
   153  .  .  .  .  .  Type: nil
   154  .  .  .  .  }
   155  .  .  .  }
   156  .  .  .  Type: *ast.FuncType {
   157  .  .  .  .  Func: 15:1
   158  .  .  .  .  TypeParams: nil
   159  .  .  .  .  Params: *ast.FieldList {
   160  .  .  .  .  .  Opening: 15:19
   161  .  .  .  .  .  List: []*ast.Field (len = 1) {
   162  .  .  .  .  .  .  0: *ast.Field {
   163  .  .  .  .  .  .  .  Doc: nil
   164  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   165  .  .  .  .  .  .  .  .  0: *ast.Ident {
   166  .  .  .  .  .  .  .  .  .  NamePos: 15:20
   167  .  .  .  .  .  .  .  .  .  Name: "db"
   168  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   169  .  .  .  .  .  .  .  .  .  .  Kind: var
   170  .  .  .  .  .  .  .  .  .  .  Name: "db"
   171  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 162)
   172  .  .  .  .  .  .  .  .  .  .  Data: nil
   173  .  .  .  .  .  .  .  .  .  .  Type: nil
   174  .  .  .  .  .  .  .  .  .  }
   175  .  .  .  .  .  .  .  .  }
   176  .  .  .  .  .  .  .  }
   177  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   178  .  .  .  .  .  .  .  .  Star: 15:23
   179  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   180  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   181  .  .  .  .  .  .  .  .  .  .  NamePos: 15:24
   182  .  .  .  .  .  .  .  .  .  .  Name: "sqlx"
   183  .  .  .  .  .  .  .  .  .  .  Obj: nil
   184  .  .  .  .  .  .  .  .  .  }
   185  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   186  .  .  .  .  .  .  .  .  .  .  NamePos: 15:29
   187  .  .  .  .  .  .  .  .  .  .  Name: "DB"
   188  .  .  .  .  .  .  .  .  .  .  Obj: nil
   189  .  .  .  .  .  .  .  .  .  }
   190  .  .  .  .  .  .  .  .  }
   191  .  .  .  .  .  .  .  }
   192  .  .  .  .  .  .  .  Tag: nil
   193  .  .  .  .  .  .  .  Comment: nil
   194  .  .  .  .  .  .  }
   195  .  .  .  .  .  }
   196  .  .  .  .  .  Closing: 15:31
   197  .  .  .  .  }
   198  .  .  .  .  Results: *ast.FieldList {
   199  .  .  .  .  .  Opening: -
   200  .  .  .  .  .  List: []*ast.Field (len = 1) {
   201  .  .  .  .  .  .  0: *ast.Field {
   202  .  .  .  .  .  .  .  Doc: nil
   203  .  .  .  .  .  .  .  Names: nil
   204  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   205  .  .  .  .  .  .  .  .  Star: 15:33
   206  .  .  .  .  .  .  .  .  X: *ast.Ident {
   207  .  .  .  .  .  .  .  .  .  NamePos: 15:34
   208  .  .  .  .  .  .  .  .  .  Name: "UserMapper"
   209  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 84)
   210  .  .  .  .  .  .  .  .  }
   211  .  .  .  .  .  .  .  }
   212  .  .  .  .  .  .  .  Tag: nil
   213  .  .  .  .  .  .  .  Comment: nil
   214  .  .  .  .  .  .  }
   215  .  .  .  .  .  }
   216  .  .  .  .  .  Closing: -
   217  .  .  .  .  }
   218  .  .  .  }
   219  .  .  .  Body: *ast.BlockStmt {
   220  .  .  .  .  Lbrace: 15:45
   221  .  .  .  .  List: []ast.Stmt (len = 1) {
   222  .  .  .  .  .  0: *ast.ReturnStmt {
   223  .  .  .  .  .  .  Return: 16:2
   224  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   225  .  .  .  .  .  .  .  0: *ast.UnaryExpr {
   226  .  .  .  .  .  .  .  .  OpPos: 16:9
   227  .  .  .  .  .  .  .  .  Op: &
   228  .  .  .  .  .  .  .  .  X: *ast.CompositeLit {
   229  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   230  .  .  .  .  .  .  .  .  .  .  NamePos: 16:10
   231  .  .  .  .  .  .  .  .  .  .  Name: "UserMapper"
   232  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 84)
   233  .  .  .  .  .  .  .  .  .  }
   234  .  .  .  .  .  .  .  .  .  Lbrace: 16:20
   235  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 1) {
   236  .  .  .  .  .  .  .  .  .  .  0: *ast.KeyValueExpr {
   237  .  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
   238  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 17:3
   239  .  .  .  .  .  .  .  .  .  .  .  .  Name: "db"
   240  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 168)
   241  .  .  .  .  .  .  .  .  .  .  .  }
   242  .  .  .  .  .  .  .  .  .  .  .  Colon: 17:5
   243  .  .  .  .  .  .  .  .  .  .  .  Value: *ast.Ident {
   244  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 17:7
   245  .  .  .  .  .  .  .  .  .  .  .  .  Name: "db"
   246  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 168)
   247  .  .  .  .  .  .  .  .  .  .  .  }
   248  .  .  .  .  .  .  .  .  .  .  }
   249  .  .  .  .  .  .  .  .  .  }
   250  .  .  .  .  .  .  .  .  .  Rbrace: 18:2
   251  .  .  .  .  .  .  .  .  .  Incomplete: false
   252  .  .  .  .  .  .  .  .  }
   253  .  .  .  .  .  .  .  }
   254  .  .  .  .  .  .  }
   255  .  .  .  .  .  }
   256  .  .  .  .  }
   257  .  .  .  .  Rbrace: 19:1
   258  .  .  .  }
   259  .  .  }
   260  .  .  3: *ast.FuncDecl {
   261  .  .  .  Doc: nil
   262  .  .  .  Recv: *ast.FieldList {
   263  .  .  .  .  Opening: 21:6
   264  .  .  .  .  List: []*ast.Field (len = 1) {
   265  .  .  .  .  .  0: *ast.Field {
   266  .  .  .  .  .  .  Doc: nil
   267  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   268  .  .  .  .  .  .  .  0: *ast.Ident {
   269  .  .  .  .  .  .  .  .  NamePos: 21:7
   270  .  .  .  .  .  .  .  .  Name: "m"
   271  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   272  .  .  .  .  .  .  .  .  .  Kind: var
   273  .  .  .  .  .  .  .  .  .  Name: "m"
   274  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 265)
   275  .  .  .  .  .  .  .  .  .  Data: nil
   276  .  .  .  .  .  .  .  .  .  Type: nil
   277  .  .  .  .  .  .  .  .  }
   278  .  .  .  .  .  .  .  }
   279  .  .  .  .  .  .  }
   280  .  .  .  .  .  .  Type: *ast.StarExpr {
   281  .  .  .  .  .  .  .  Star: 21:9
   282  .  .  .  .  .  .  .  X: *ast.Ident {
   283  .  .  .  .  .  .  .  .  NamePos: 21:10
   284  .  .  .  .  .  .  .  .  Name: "UserMapper"
   285  .  .  .  .  .  .  .  .  Obj: *(obj @ 84)
   286  .  .  .  .  .  .  .  }
   287  .  .  .  .  .  .  }
   288  .  .  .  .  .  .  Tag: nil
   289  .  .  .  .  .  .  Comment: nil
   290  .  .  .  .  .  }
   291  .  .  .  .  }
   292  .  .  .  .  Closing: 21:20
   293  .  .  .  }
   294  .  .  .  Name: *ast.Ident {
   295  .  .  .  .  NamePos: 21:22
   296  .  .  .  .  Name: "Add"
   297  .  .  .  .  Obj: nil
   298  .  .  .  }
   299  .  .  .  Type: *ast.FuncType {
   300  .  .  .  .  Func: 21:1
   301  .  .  .  .  TypeParams: nil
   302  .  .  .  .  Params: *ast.FieldList {
   303  .  .  .  .  .  Opening: 21:25
   304  .  .  .  .  .  List: []*ast.Field (len = 1) {
   305  .  .  .  .  .  .  0: *ast.Field {
   306  .  .  .  .  .  .  .  Doc: nil
   307  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   308  .  .  .  .  .  .  .  .  0: *ast.Ident {
   309  .  .  .  .  .  .  .  .  .  NamePos: 21:26
   310  .  .  .  .  .  .  .  .  .  Name: "user"
   311  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   312  .  .  .  .  .  .  .  .  .  .  Kind: var
   313  .  .  .  .  .  .  .  .  .  .  Name: "user"
   314  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 305)
   315  .  .  .  .  .  .  .  .  .  .  Data: nil
   316  .  .  .  .  .  .  .  .  .  .  Type: nil
   317  .  .  .  .  .  .  .  .  .  }
   318  .  .  .  .  .  .  .  .  }
   319  .  .  .  .  .  .  .  }
   320  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   321  .  .  .  .  .  .  .  .  Star: 21:31
   322  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   323  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   324  .  .  .  .  .  .  .  .  .  .  NamePos: 21:32
   325  .  .  .  .  .  .  .  .  .  .  Name: "model"
   326  .  .  .  .  .  .  .  .  .  .  Obj: nil
   327  .  .  .  .  .  .  .  .  .  }
   328  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   329  .  .  .  .  .  .  .  .  .  .  NamePos: 21:38
   330  .  .  .  .  .  .  .  .  .  .  Name: "User"
   331  .  .  .  .  .  .  .  .  .  .  Obj: nil
   332  .  .  .  .  .  .  .  .  .  }
   333  .  .  .  .  .  .  .  .  }
   334  .  .  .  .  .  .  .  }
   335  .  .  .  .  .  .  .  Tag: nil
   336  .  .  .  .  .  .  .  Comment: nil
   337  .  .  .  .  .  .  }
   338  .  .  .  .  .  }
   339  .  .  .  .  .  Closing: 21:42
   340  .  .  .  .  }
   341  .  .  .  .  Results: *ast.FieldList {
   342  .  .  .  .  .  Opening: -
   343  .  .  .  .  .  List: []*ast.Field (len = 1) {
   344  .  .  .  .  .  .  0: *ast.Field {
   345  .  .  .  .  .  .  .  Doc: nil
   346  .  .  .  .  .  .  .  Names: nil
   347  .  .  .  .  .  .  .  Type: *ast.Ident {
   348  .  .  .  .  .  .  .  .  NamePos: 21:44
   349  .  .  .  .  .  .  .  .  Name: "error"
   350  .  .  .  .  .  .  .  .  Obj: nil
   351  .  .  .  .  .  .  .  }
   352  .  .  .  .  .  .  .  Tag: nil
   353  .  .  .  .  .  .  .  Comment: nil
   354  .  .  .  .  .  .  }
   355  .  .  .  .  .  }
   356  .  .  .  .  .  Closing: -
   357  .  .  .  .  }
   358  .  .  .  }
   359  .  .  .  Body: *ast.BlockStmt {
   360  .  .  .  .  Lbrace: 21:50
   361  .  .  .  .  List: []ast.Stmt (len = 2) {
   362  .  .  .  .  .  0: *ast.ExprStmt {
   363  .  .  .  .  .  .  X: *ast.CallExpr {
   364  .  .  .  .  .  .  .  Fun: *ast.Ident {
   365  .  .  .  .  .  .  .  .  NamePos: 22:2
   366  .  .  .  .  .  .  .  .  Name: "Insert"
   367  .  .  .  .  .  .  .  .  Obj: nil
   368  .  .  .  .  .  .  .  }
   369  .  .  .  .  .  .  .  Lparen: 22:8
   370  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   371  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   372  .  .  .  .  .  .  .  .  .  ValuePos: 22:9
   373  .  .  .  .  .  .  .  .  .  Kind: STRING
   374  .  .  .  .  .  .  .  .  .  Value: "`INSERT INTO t_user (id, username, password, create_at, email, address) \n            VALUES (#{user.Id}, #{user.Username}, #{user.Password}, #{user.Create_at}, #{user.Email}, #{user.Address})`"
   375  .  .  .  .  .  .  .  .  }
   376  .  .  .  .  .  .  .  }
   377  .  .  .  .  .  .  .  Ellipsis: -
   378  .  .  .  .  .  .  .  Rparen: 23:120
   379  .  .  .  .  .  .  }
   380  .  .  .  .  .  }
   381  .  .  .  .  .  1: *ast.ExprStmt {
   382  .  .  .  .  .  .  X: *ast.CallExpr {
   383  .  .  .  .  .  .  .  Fun: *ast.Ident {
   384  .  .  .  .  .  .  .  .  NamePos: 24:2
   385  .  .  .  .  .  .  .  .  Name: "panic"
   386  .  .  .  .  .  .  .  .  Obj: nil
   387  .  .  .  .  .  .  .  }
   388  .  .  .  .  .  .  .  Lparen: 24:7
   389  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   390  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   391  .  .  .  .  .  .  .  .  .  ValuePos: 24:8
   392  .  .  .  .  .  .  .  .  .  Kind: STRING
   393  .  .  .  .  .  .  .  .  .  Value: "\"\""
   394  .  .  .  .  .  .  .  .  }
   395  .  .  .  .  .  .  .  }
   396  .  .  .  .  .  .  .  Ellipsis: -
   397  .  .  .  .  .  .  .  Rparen: 24:10
   398  .  .  .  .  .  .  }
   399  .  .  .  .  .  }
   400  .  .  .  .  }
   401  .  .  .  .  Rbrace: 25:1
   402  .  .  .  }
   403  .  .  }
   404  .  .  4: *ast.FuncDecl {
   405  .  .  .  Doc: nil
   406  .  .  .  Recv: *ast.FieldList {
   407  .  .  .  .  Opening: 27:6
   408  .  .  .  .  List: []*ast.Field (len = 1) {
   409  .  .  .  .  .  0: *ast.Field {
   410  .  .  .  .  .  .  Doc: nil
   411  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   412  .  .  .  .  .  .  .  0: *ast.Ident {
   413  .  .  .  .  .  .  .  .  NamePos: 27:7
   414  .  .  .  .  .  .  .  .  Name: "m"
   415  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   416  .  .  .  .  .  .  .  .  .  Kind: var
   417  .  .  .  .  .  .  .  .  .  Name: "m"
   418  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 409)
   419  .  .  .  .  .  .  .  .  .  Data: nil
   420  .  .  .  .  .  .  .  .  .  Type: nil
   421  .  .  .  .  .  .  .  .  }
   422  .  .  .  .  .  .  .  }
   423  .  .  .  .  .  .  }
   424  .  .  .  .  .  .  Type: *ast.StarExpr {
   425  .  .  .  .  .  .  .  Star: 27:9
   426  .  .  .  .  .  .  .  X: *ast.Ident {
   427  .  .  .  .  .  .  .  .  NamePos: 27:10
   428  .  .  .  .  .  .  .  .  Name: "UserMapper"
   429  .  .  .  .  .  .  .  .  Obj: *(obj @ 84)
   430  .  .  .  .  .  .  .  }
   431  .  .  .  .  .  .  }
   432  .  .  .  .  .  .  Tag: nil
   433  .  .  .  .  .  .  Comment: nil
   434  .  .  .  .  .  }
   435  .  .  .  .  }
   436  .  .  .  .  Closing: 27:20
   437  .  .  .  }
   438  .  .  .  Name: *ast.Ident {
   439  .  .  .  .  NamePos: 27:22
   440  .  .  .  .  Name: "DeleteById"
   441  .  .  .  .  Obj: nil
   442  .  .  .  }
   443  .  .  .  Type: *ast.FuncType {
   444  .  .  .  .  Func: 27:1
   445  .  .  .  .  TypeParams: nil
   446  .  .  .  .  Params: *ast.FieldList {
   447  .  .  .  .  .  Opening: 27:32
   448  .  .  .  .  .  List: []*ast.Field (len = 1) {
   449  .  .  .  .  .  .  0: *ast.Field {
   450  .  .  .  .  .  .  .  Doc: nil
   451  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   452  .  .  .  .  .  .  .  .  0: *ast.Ident {
   453  .  .  .  .  .  .  .  .  .  NamePos: 27:33
   454  .  .  .  .  .  .  .  .  .  Name: "id"
   455  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   456  .  .  .  .  .  .  .  .  .  .  Kind: var
   457  .  .  .  .  .  .  .  .  .  .  Name: "id"
   458  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 449)
   459  .  .  .  .  .  .  .  .  .  .  Data: nil
   460  .  .  .  .  .  .  .  .  .  .  Type: nil
   461  .  .  .  .  .  .  .  .  .  }
   462  .  .  .  .  .  .  .  .  }
   463  .  .  .  .  .  .  .  }
   464  .  .  .  .  .  .  .  Type: *ast.Ident {
   465  .  .  .  .  .  .  .  .  NamePos: 27:36
   466  .  .  .  .  .  .  .  .  Name: "int"
   467  .  .  .  .  .  .  .  .  Obj: nil
   468  .  .  .  .  .  .  .  }
   469  .  .  .  .  .  .  .  Tag: nil
   470  .  .  .  .  .  .  .  Comment: nil
   471  .  .  .  .  .  .  }
   472  .  .  .  .  .  }
   473  .  .  .  .  .  Closing: 27:39
   474  .  .  .  .  }
   475  .  .  .  .  Results: *ast.FieldList {
   476  .  .  .  .  .  Opening: 27:41
   477  .  .  .  .  .  List: []*ast.Field (len = 2) {
   478  .  .  .  .  .  .  0: *ast.Field {
   479  .  .  .  .  .  .  .  Doc: nil
   480  .  .  .  .  .  .  .  Names: nil
   481  .  .  .  .  .  .  .  Type: *ast.Ident {
   482  .  .  .  .  .  .  .  .  NamePos: 27:42
   483  .  .  .  .  .  .  .  .  Name: "int"
   484  .  .  .  .  .  .  .  .  Obj: nil
   485  .  .  .  .  .  .  .  }
   486  .  .  .  .  .  .  .  Tag: nil
   487  .  .  .  .  .  .  .  Comment: nil
   488  .  .  .  .  .  .  }
   489  .  .  .  .  .  .  1: *ast.Field {
   490  .  .  .  .  .  .  .  Doc: nil
   491  .  .  .  .  .  .  .  Names: nil
   492  .  .  .  .  .  .  .  Type: *ast.Ident {
   493  .  .  .  .  .  .  .  .  NamePos: 27:47
   494  .  .  .  .  .  .  .  .  Name: "error"
   495  .  .  .  .  .  .  .  .  Obj: nil
   496  .  .  .  .  .  .  .  }
   497  .  .  .  .  .  .  .  Tag: nil
   498  .  .  .  .  .  .  .  Comment: nil
   499  .  .  .  .  .  .  }
   500  .  .  .  .  .  }
   501  .  .  .  .  .  Closing: 27:52
   502  .  .  .  .  }
   503  .  .  .  }
   504  .  .  .  Body: *ast.BlockStmt {
   505  .  .  .  .  Lbrace: 27:54
   506  .  .  .  .  List: []ast.Stmt (len = 2) {
   507  .  .  .  .  .  0: *ast.ExprStmt {
   508  .  .  .  .  .  .  X: *ast.CallExpr {
   509  .  .  .  .  .  .  .  Fun: *ast.Ident {
   510  .  .  .  .  .  .  .  .  NamePos: 28:2
   511  .  .  .  .  .  .  .  .  Name: "Delete"
   512  .  .  .  .  .  .  .  .  Obj: nil
   513  .  .  .  .  .  .  .  }
   514  .  .  .  .  .  .  .  Lparen: 28:8
   515  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   516  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   517  .  .  .  .  .  .  .  .  .  ValuePos: 28:9
   518  .  .  .  .  .  .  .  .  .  Kind: STRING
   519  .  .  .  .  .  .  .  .  .  Value: "\"DELETE FROM t_user WHERE id = #{id}\""
   520  .  .  .  .  .  .  .  .  }
   521  .  .  .  .  .  .  .  }
   522  .  .  .  .  .  .  .  Ellipsis: -
   523  .  .  .  .  .  .  .  Rparen: 28:46
   524  .  .  .  .  .  .  }
   525  .  .  .  .  .  }
   526  .  .  .  .  .  1: *ast.ExprStmt {
   527  .  .  .  .  .  .  X: *ast.CallExpr {
   528  .  .  .  .  .  .  .  Fun: *ast.Ident {
   529  .  .  .  .  .  .  .  .  NamePos: 29:2
   530  .  .  .  .  .  .  .  .  Name: "panic"
   531  .  .  .  .  .  .  .  .  Obj: nil
   532  .  .  .  .  .  .  .  }
   533  .  .  .  .  .  .  .  Lparen: 29:7
   534  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   535  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   536  .  .  .  .  .  .  .  .  .  ValuePos: 29:8
   537  .  .  .  .  .  .  .  .  .  Kind: STRING
   538  .  .  .  .  .  .  .  .  .  Value: "\"\""
   539  .  .  .  .  .  .  .  .  }
   540  .  .  .  .  .  .  .  }
   541  .  .  .  .  .  .  .  Ellipsis: -
   542  .  .  .  .  .  .  .  Rparen: 29:10
   543  .  .  .  .  .  .  }
   544  .  .  .  .  .  }
   545  .  .  .  .  }
   546  .  .  .  .  Rbrace: 30:1
   547  .  .  .  }
   548  .  .  }
   549  .  .  5: *ast.FuncDecl {
   550  .  .  .  Doc: nil
   551  .  .  .  Recv: *ast.FieldList {
   552  .  .  .  .  Opening: 32:6
   553  .  .  .  .  List: []*ast.Field (len = 1) {
   554  .  .  .  .  .  0: *ast.Field {
   555  .  .  .  .  .  .  Doc: nil
   556  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   557  .  .  .  .  .  .  .  0: *ast.Ident {
   558  .  .  .  .  .  .  .  .  NamePos: 32:7
   559  .  .  .  .  .  .  .  .  Name: "m"
   560  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   561  .  .  .  .  .  .  .  .  .  Kind: var
   562  .  .  .  .  .  .  .  .  .  Name: "m"
   563  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 554)
   564  .  .  .  .  .  .  .  .  .  Data: nil
   565  .  .  .  .  .  .  .  .  .  Type: nil
   566  .  .  .  .  .  .  .  .  }
   567  .  .  .  .  .  .  .  }
   568  .  .  .  .  .  .  }
   569  .  .  .  .  .  .  Type: *ast.StarExpr {
   570  .  .  .  .  .  .  .  Star: 32:9
   571  .  .  .  .  .  .  .  X: *ast.Ident {
   572  .  .  .  .  .  .  .  .  NamePos: 32:10
   573  .  .  .  .  .  .  .  .  Name: "UserMapper"
   574  .  .  .  .  .  .  .  .  Obj: *(obj @ 84)
   575  .  .  .  .  .  .  .  }
   576  .  .  .  .  .  .  }
   577  .  .  .  .  .  .  Tag: nil
   578  .  .  .  .  .  .  Comment: nil
   579  .  .  .  .  .  }
   580  .  .  .  .  }
   581  .  .  .  .  Closing: 32:20
   582  .  .  .  }
   583  .  .  .  Name: *ast.Ident {
   584  .  .  .  .  NamePos: 32:22
   585  .  .  .  .  Name: "UpdateById"
   586  .  .  .  .  Obj: nil
   587  .  .  .  }
   588  .  .  .  Type: *ast.FuncType {
   589  .  .  .  .  Func: 32:1
   590  .  .  .  .  TypeParams: nil
   591  .  .  .  .  Params: *ast.FieldList {
   592  .  .  .  .  .  Opening: 32:32
   593  .  .  .  .  .  List: []*ast.Field (len = 1) {
   594  .  .  .  .  .  .  0: *ast.Field {
   595  .  .  .  .  .  .  .  Doc: nil
   596  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   597  .  .  .  .  .  .  .  .  0: *ast.Ident {
   598  .  .  .  .  .  .  .  .  .  NamePos: 32:33
   599  .  .  .  .  .  .  .  .  .  Name: "user"
   600  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   601  .  .  .  .  .  .  .  .  .  .  Kind: var
   602  .  .  .  .  .  .  .  .  .  .  Name: "user"
   603  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 594)
   604  .  .  .  .  .  .  .  .  .  .  Data: nil
   605  .  .  .  .  .  .  .  .  .  .  Type: nil
   606  .  .  .  .  .  .  .  .  .  }
   607  .  .  .  .  .  .  .  .  }
   608  .  .  .  .  .  .  .  }
   609  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   610  .  .  .  .  .  .  .  .  Star: 32:38
   611  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   612  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   613  .  .  .  .  .  .  .  .  .  .  NamePos: 32:39
   614  .  .  .  .  .  .  .  .  .  .  Name: "model"
   615  .  .  .  .  .  .  .  .  .  .  Obj: nil
   616  .  .  .  .  .  .  .  .  .  }
   617  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   618  .  .  .  .  .  .  .  .  .  .  NamePos: 32:45
   619  .  .  .  .  .  .  .  .  .  .  Name: "User"
   620  .  .  .  .  .  .  .  .  .  .  Obj: nil
   621  .  .  .  .  .  .  .  .  .  }
   622  .  .  .  .  .  .  .  .  }
   623  .  .  .  .  .  .  .  }
   624  .  .  .  .  .  .  .  Tag: nil
   625  .  .  .  .  .  .  .  Comment: nil
   626  .  .  .  .  .  .  }
   627  .  .  .  .  .  }
   628  .  .  .  .  .  Closing: 32:49
   629  .  .  .  .  }
   630  .  .  .  .  Results: *ast.FieldList {
   631  .  .  .  .  .  Opening: 32:51
   632  .  .  .  .  .  List: []*ast.Field (len = 2) {
   633  .  .  .  .  .  .  0: *ast.Field {
   634  .  .  .  .  .  .  .  Doc: nil
   635  .  .  .  .  .  .  .  Names: nil
   636  .  .  .  .  .  .  .  Type: *ast.Ident {
   637  .  .  .  .  .  .  .  .  NamePos: 32:52
   638  .  .  .  .  .  .  .  .  Name: "int"
   639  .  .  .  .  .  .  .  .  Obj: nil
   640  .  .  .  .  .  .  .  }
   641  .  .  .  .  .  .  .  Tag: nil
   642  .  .  .  .  .  .  .  Comment: nil
   643  .  .  .  .  .  .  }
   644  .  .  .  .  .  .  1: *ast.Field {
   645  .  .  .  .  .  .  .  Doc: nil
   646  .  .  .  .  .  .  .  Names: nil
   647  .  .  .  .  .  .  .  Type: *ast.Ident {
   648  .  .  .  .  .  .  .  .  NamePos: 32:57
   649  .  .  .  .  .  .  .  .  Name: "error"
   650  .  .  .  .  .  .  .  .  Obj: nil
   651  .  .  .  .  .  .  .  }
   652  .  .  .  .  .  .  .  Tag: nil
   653  .  .  .  .  .  .  .  Comment: nil
   654  .  .  .  .  .  .  }
   655  .  .  .  .  .  }
   656  .  .  .  .  .  Closing: 32:62
   657  .  .  .  .  }
   658  .  .  .  }
   659  .  .  .  Body: *ast.BlockStmt {
   660  .  .  .  .  Lbrace: 32:64
   661  .  .  .  .  List: []ast.Stmt (len = 3) {
   662  .  .  .  .  .  0: *ast.AssignStmt {
   663  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   664  .  .  .  .  .  .  .  0: *ast.Ident {
   665  .  .  .  .  .  .  .  .  NamePos: 33:2
   666  .  .  .  .  .  .  .  .  Name: "a"
   667  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   668  .  .  .  .  .  .  .  .  .  Kind: var
   669  .  .  .  .  .  .  .  .  .  Name: "a"
   670  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 662)
   671  .  .  .  .  .  .  .  .  .  Data: nil
   672  .  .  .  .  .  .  .  .  .  Type: nil
   673  .  .  .  .  .  .  .  .  }
   674  .  .  .  .  .  .  .  }
   675  .  .  .  .  .  .  }
   676  .  .  .  .  .  .  TokPos: 33:4
   677  .  .  .  .  .  .  Tok: :=
   678  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   679  .  .  .  .  .  .  .  0: *ast.Ident {
   680  .  .  .  .  .  .  .  .  NamePos: 33:7
   681  .  .  .  .  .  .  .  .  Name: "true"
   682  .  .  .  .  .  .  .  .  Obj: nil
   683  .  .  .  .  .  .  .  }
   684  .  .  .  .  .  .  }
   685  .  .  .  .  .  }
   686  .  .  .  .  .  1: *ast.ExprStmt {
   687  .  .  .  .  .  .  X: *ast.CallExpr {
   688  .  .  .  .  .  .  .  Fun: *ast.Ident {
   689  .  .  .  .  .  .  .  .  NamePos: 34:2
   690  .  .  .  .  .  .  .  .  Name: "Update"
   691  .  .  .  .  .  .  .  .  Obj: nil
   692  .  .  .  .  .  .  .  }
   693  .  .  .  .  .  .  .  Lparen: 34:8
   694  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   695  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
   696  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   697  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   698  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   699  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   700  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   701  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   702  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   703  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   704  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   705  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 34:9
   706  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "SQL"
   707  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   708  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   709  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 34:12
   710  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: nil
   711  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   712  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 34:13
   713  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   714  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   715  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 34:15
   716  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Stmt"
   717  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   718  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   719  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   720  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 34:19
   721  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   722  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   723  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 34:20
   724  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   725  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"UPDATE t_user\""
   726  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   727  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   728  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   729  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 34:35
   730  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   731  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   732  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 35:3
   733  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Set"
   734  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   735  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   736  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   737  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 35:6
   738  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   739  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
   740  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   741  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   742  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   743  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   744  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   745  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 35:7
   746  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "If"
   747  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   748  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   749  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 35:9
   750  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   751  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   752  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   753  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   754  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 35:10
   755  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "user"
   756  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 600)
   757  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   758  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   759  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 35:15
   760  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Password"
   761  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   762  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   763  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   764  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: 35:24
   765  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !=
   766  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   767  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 35:27
   768  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   769  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\""
   770  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   771  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   772  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
   773  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 35:31
   774  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   775  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"password = #{user.Password}\""
   776  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   777  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   778  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   779  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 35:60
   780  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   781  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   782  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 36:4
   783  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "If"
   784  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   785  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   786  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   787  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 36:6
   788  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   789  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   790  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   791  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   792  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 36:7
   793  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "user"
   794  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 600)
   795  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   796  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   797  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 36:12
   798  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Email"
   799  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   800  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   801  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   802  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: 36:18
   803  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !=
   804  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   805  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 36:21
   806  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   807  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\""
   808  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   809  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   810  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
   811  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 36:25
   812  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   813  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"email = #{user.Email}\""
   814  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   815  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   816  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   817  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 36:48
   818  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   819  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   820  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 37:4
   821  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "If"
   822  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   823  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   824  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   825  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 37:6
   826  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   827  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   828  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BinaryExpr {
   829  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   830  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   831  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 37:7
   832  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "user"
   833  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 600)
   834  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   835  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   836  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 37:12
   837  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Address"
   838  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   839  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   840  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   841  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: 37:20
   842  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !=
   843  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   844  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 37:23
   845  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   846  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\""
   847  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   848  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   849  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: 37:26
   850  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: &&
   851  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.ParenExpr {
   852  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 37:29
   853  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BinaryExpr {
   854  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BinaryExpr {
   855  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   856  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   857  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 37:30
   858  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "user"
   859  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 600)
   860  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   861  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   862  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 37:35
   863  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Id"
   864  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   865  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   866  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   867  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: 37:38
   868  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: >
   869  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   870  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 37:40
   871  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT
   872  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "0"
   873  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   874  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   875  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: 37:42
   876  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: ||
   877  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
   878  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 37:45
   879  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "a"
   880  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 667)
   881  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   882  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   883  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 37:46
   884  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   885  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   886  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
   887  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 37:49
   888  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   889  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"address = #{user.Address}\""
   890  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   891  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   892  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   893  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 37:76
   894  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   895  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   896  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   897  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 37:77
   898  .  .  .  .  .  .  .  .  .  .  .  .  }
   899  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   900  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 38:3
   901  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Stmt"
   902  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   903  .  .  .  .  .  .  .  .  .  .  .  .  }
   904  .  .  .  .  .  .  .  .  .  .  .  }
   905  .  .  .  .  .  .  .  .  .  .  .  Lparen: 38:7
   906  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   907  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   908  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 38:8
   909  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   910  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"WHERE id = #{user.Id}\""
   911  .  .  .  .  .  .  .  .  .  .  .  .  }
   912  .  .  .  .  .  .  .  .  .  .  .  }
   913  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   914  .  .  .  .  .  .  .  .  .  .  .  Rparen: 38:31
   915  .  .  .  .  .  .  .  .  .  .  }
   916  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   917  .  .  .  .  .  .  .  .  .  .  .  NamePos: 38:33
   918  .  .  .  .  .  .  .  .  .  .  .  Name: "Build"
   919  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   920  .  .  .  .  .  .  .  .  .  .  }
   921  .  .  .  .  .  .  .  .  .  }
   922  .  .  .  .  .  .  .  .  .  Lparen: 38:38
   923  .  .  .  .  .  .  .  .  .  Args: nil
   924  .  .  .  .  .  .  .  .  .  Ellipsis: -
   925  .  .  .  .  .  .  .  .  .  Rparen: 38:39
   926  .  .  .  .  .  .  .  .  }
   927  .  .  .  .  .  .  .  }
   928  .  .  .  .  .  .  .  Ellipsis: -
   929  .  .  .  .  .  .  .  Rparen: 38:40
   930  .  .  .  .  .  .  }
   931  .  .  .  .  .  }
   932  .  .  .  .  .  2: *ast.ExprStmt {
   933  .  .  .  .  .  .  X: *ast.CallExpr {
   934  .  .  .  .  .  .  .  Fun: *ast.Ident {
   935  .  .  .  .  .  .  .  .  NamePos: 39:2
   936  .  .  .  .  .  .  .  .  Name: "panic"
   937  .  .  .  .  .  .  .  .  Obj: nil
   938  .  .  .  .  .  .  .  }
   939  .  .  .  .  .  .  .  Lparen: 39:7
   940  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   941  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   942  .  .  .  .  .  .  .  .  .  ValuePos: 39:8
   943  .  .  .  .  .  .  .  .  .  Kind: STRING
   944  .  .  .  .  .  .  .  .  .  Value: "\"\""
   945  .  .  .  .  .  .  .  .  }
   946  .  .  .  .  .  .  .  }
   947  .  .  .  .  .  .  .  Ellipsis: -
   948  .  .  .  .  .  .  .  Rparen: 39:10
   949  .  .  .  .  .  .  }
   950  .  .  .  .  .  }
   951  .  .  .  .  }
   952  .  .  .  .  Rbrace: 40:1
   953  .  .  .  }
   954  .  .  }
   955  .  .  6: *ast.FuncDecl {
   956  .  .  .  Doc: nil
   957  .  .  .  Recv: *ast.FieldList {
   958  .  .  .  .  Opening: 42:6
   959  .  .  .  .  List: []*ast.Field (len = 1) {
   960  .  .  .  .  .  0: *ast.Field {
   961  .  .  .  .  .  .  Doc: nil
   962  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   963  .  .  .  .  .  .  .  0: *ast.Ident {
   964  .  .  .  .  .  .  .  .  NamePos: 42:7
   965  .  .  .  .  .  .  .  .  Name: "m"
   966  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   967  .  .  .  .  .  .  .  .  .  Kind: var
   968  .  .  .  .  .  .  .  .  .  Name: "m"
   969  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 960)
   970  .  .  .  .  .  .  .  .  .  Data: nil
   971  .  .  .  .  .  .  .  .  .  Type: nil
   972  .  .  .  .  .  .  .  .  }
   973  .  .  .  .  .  .  .  }
   974  .  .  .  .  .  .  }
   975  .  .  .  .  .  .  Type: *ast.StarExpr {
   976  .  .  .  .  .  .  .  Star: 42:9
   977  .  .  .  .  .  .  .  X: *ast.Ident {
   978  .  .  .  .  .  .  .  .  NamePos: 42:10
   979  .  .  .  .  .  .  .  .  Name: "UserMapper"
   980  .  .  .  .  .  .  .  .  Obj: *(obj @ 84)
   981  .  .  .  .  .  .  .  }
   982  .  .  .  .  .  .  }
   983  .  .  .  .  .  .  Tag: nil
   984  .  .  .  .  .  .  Comment: nil
   985  .  .  .  .  .  }
   986  .  .  .  .  }
   987  .  .  .  .  Closing: 42:20
   988  .  .  .  }
   989  .  .  .  Name: *ast.Ident {
   990  .  .  .  .  NamePos: 42:22
   991  .  .  .  .  Name: "FindById"
   992  .  .  .  .  Obj: nil
   993  .  .  .  }
   994  .  .  .  Type: *ast.FuncType {
   995  .  .  .  .  Func: 42:1
   996  .  .  .  .  TypeParams: nil
   997  .  .  .  .  Params: *ast.FieldList {
   998  .  .  .  .  .  Opening: 42:30
   999  .  .  .  .  .  List: []*ast.Field (len = 1) {
  1000  .  .  .  .  .  .  0: *ast.Field {
  1001  .  .  .  .  .  .  .  Doc: nil
  1002  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1003  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1004  .  .  .  .  .  .  .  .  .  NamePos: 42:31
  1005  .  .  .  .  .  .  .  .  .  Name: "id"
  1006  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1007  .  .  .  .  .  .  .  .  .  .  Kind: var
  1008  .  .  .  .  .  .  .  .  .  .  Name: "id"
  1009  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1000)
  1010  .  .  .  .  .  .  .  .  .  .  Data: nil
  1011  .  .  .  .  .  .  .  .  .  .  Type: nil
  1012  .  .  .  .  .  .  .  .  .  }
  1013  .  .  .  .  .  .  .  .  }
  1014  .  .  .  .  .  .  .  }
  1015  .  .  .  .  .  .  .  Type: *ast.Ident {
  1016  .  .  .  .  .  .  .  .  NamePos: 42:34
  1017  .  .  .  .  .  .  .  .  Name: "int"
  1018  .  .  .  .  .  .  .  .  Obj: nil
  1019  .  .  .  .  .  .  .  }
  1020  .  .  .  .  .  .  .  Tag: nil
  1021  .  .  .  .  .  .  .  Comment: nil
  1022  .  .  .  .  .  .  }
  1023  .  .  .  .  .  }
  1024  .  .  .  .  .  Closing: 42:37
  1025  .  .  .  .  }
  1026  .  .  .  .  Results: *ast.FieldList {
  1027  .  .  .  .  .  Opening: 42:39
  1028  .  .  .  .  .  List: []*ast.Field (len = 2) {
  1029  .  .  .  .  .  .  0: *ast.Field {
  1030  .  .  .  .  .  .  .  Doc: nil
  1031  .  .  .  .  .  .  .  Names: nil
  1032  .  .  .  .  .  .  .  Type: *ast.StarExpr {
  1033  .  .  .  .  .  .  .  .  Star: 42:40
  1034  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1035  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1036  .  .  .  .  .  .  .  .  .  .  NamePos: 42:41
  1037  .  .  .  .  .  .  .  .  .  .  Name: "model"
  1038  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1039  .  .  .  .  .  .  .  .  .  }
  1040  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1041  .  .  .  .  .  .  .  .  .  .  NamePos: 42:47
  1042  .  .  .  .  .  .  .  .  .  .  Name: "User"
  1043  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1044  .  .  .  .  .  .  .  .  .  }
  1045  .  .  .  .  .  .  .  .  }
  1046  .  .  .  .  .  .  .  }
  1047  .  .  .  .  .  .  .  Tag: nil
  1048  .  .  .  .  .  .  .  Comment: nil
  1049  .  .  .  .  .  .  }
  1050  .  .  .  .  .  .  1: *ast.Field {
  1051  .  .  .  .  .  .  .  Doc: nil
  1052  .  .  .  .  .  .  .  Names: nil
  1053  .  .  .  .  .  .  .  Type: *ast.Ident {
  1054  .  .  .  .  .  .  .  .  NamePos: 42:53
  1055  .  .  .  .  .  .  .  .  Name: "error"
  1056  .  .  .  .  .  .  .  .  Obj: nil
  1057  .  .  .  .  .  .  .  }
  1058  .  .  .  .  .  .  .  Tag: nil
  1059  .  .  .  .  .  .  .  Comment: nil
  1060  .  .  .  .  .  .  }
  1061  .  .  .  .  .  }
  1062  .  .  .  .  .  Closing: 42:58
  1063  .  .  .  .  }
  1064  .  .  .  }
  1065  .  .  .  Body: *ast.BlockStmt {
  1066  .  .  .  .  Lbrace: 42:60
  1067  .  .  .  .  List: []ast.Stmt (len = 2) {
  1068  .  .  .  .  .  0: *ast.ExprStmt {
  1069  .  .  .  .  .  .  X: *ast.CallExpr {
  1070  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1071  .  .  .  .  .  .  .  .  NamePos: 43:2
  1072  .  .  .  .  .  .  .  .  Name: "Select"
  1073  .  .  .  .  .  .  .  .  Obj: nil
  1074  .  .  .  .  .  .  .  }
  1075  .  .  .  .  .  .  .  Lparen: 43:8
  1076  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1077  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  1078  .  .  .  .  .  .  .  .  .  ValuePos: 43:9
  1079  .  .  .  .  .  .  .  .  .  Kind: STRING
  1080  .  .  .  .  .  .  .  .  .  Value: "\"SELECT * FROM t_user WHERE id = #{id}\""
  1081  .  .  .  .  .  .  .  .  }
  1082  .  .  .  .  .  .  .  }
  1083  .  .  .  .  .  .  .  Ellipsis: -
  1084  .  .  .  .  .  .  .  Rparen: 43:48
  1085  .  .  .  .  .  .  }
  1086  .  .  .  .  .  }
  1087  .  .  .  .  .  1: *ast.ExprStmt {
  1088  .  .  .  .  .  .  X: *ast.CallExpr {
  1089  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1090  .  .  .  .  .  .  .  .  NamePos: 44:2
  1091  .  .  .  .  .  .  .  .  Name: "panic"
  1092  .  .  .  .  .  .  .  .  Obj: nil
  1093  .  .  .  .  .  .  .  }
  1094  .  .  .  .  .  .  .  Lparen: 44:7
  1095  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1096  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  1097  .  .  .  .  .  .  .  .  .  ValuePos: 44:8
  1098  .  .  .  .  .  .  .  .  .  Kind: STRING
  1099  .  .  .  .  .  .  .  .  .  Value: "\"\""
  1100  .  .  .  .  .  .  .  .  }
  1101  .  .  .  .  .  .  .  }
  1102  .  .  .  .  .  .  .  Ellipsis: -
  1103  .  .  .  .  .  .  .  Rparen: 44:10
  1104  .  .  .  .  .  .  }
  1105  .  .  .  .  .  }
  1106  .  .  .  .  }
  1107  .  .  .  .  Rbrace: 45:1
  1108  .  .  .  }
  1109  .  .  }
  1110  .  .  7: *ast.FuncDecl {
  1111  .  .  .  Doc: nil
  1112  .  .  .  Recv: *ast.FieldList {
  1113  .  .  .  .  Opening: 47:6
  1114  .  .  .  .  List: []*ast.Field (len = 1) {
  1115  .  .  .  .  .  0: *ast.Field {
  1116  .  .  .  .  .  .  Doc: nil
  1117  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1118  .  .  .  .  .  .  .  0: *ast.Ident {
  1119  .  .  .  .  .  .  .  .  NamePos: 47:7
  1120  .  .  .  .  .  .  .  .  Name: "m"
  1121  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1122  .  .  .  .  .  .  .  .  .  Kind: var
  1123  .  .  .  .  .  .  .  .  .  Name: "m"
  1124  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1115)
  1125  .  .  .  .  .  .  .  .  .  Data: nil
  1126  .  .  .  .  .  .  .  .  .  Type: nil
  1127  .  .  .  .  .  .  .  .  }
  1128  .  .  .  .  .  .  .  }
  1129  .  .  .  .  .  .  }
  1130  .  .  .  .  .  .  Type: *ast.StarExpr {
  1131  .  .  .  .  .  .  .  Star: 47:9
  1132  .  .  .  .  .  .  .  X: *ast.Ident {
  1133  .  .  .  .  .  .  .  .  NamePos: 47:10
  1134  .  .  .  .  .  .  .  .  Name: "UserMapper"
  1135  .  .  .  .  .  .  .  .  Obj: *(obj @ 84)
  1136  .  .  .  .  .  .  .  }
  1137  .  .  .  .  .  .  }
  1138  .  .  .  .  .  .  Tag: nil
  1139  .  .  .  .  .  .  Comment: nil
  1140  .  .  .  .  .  }
  1141  .  .  .  .  }
  1142  .  .  .  .  Closing: 47:20
  1143  .  .  .  }
  1144  .  .  .  Name: *ast.Ident {
  1145  .  .  .  .  NamePos: 47:22
  1146  .  .  .  .  Name: "Find"
  1147  .  .  .  .  Obj: nil
  1148  .  .  .  }
  1149  .  .  .  Type: *ast.FuncType {
  1150  .  .  .  .  Func: 47:1
  1151  .  .  .  .  TypeParams: nil
  1152  .  .  .  .  Params: *ast.FieldList {
  1153  .  .  .  .  .  Opening: 47:26
  1154  .  .  .  .  .  List: []*ast.Field (len = 1) {
  1155  .  .  .  .  .  .  0: *ast.Field {
  1156  .  .  .  .  .  .  .  Doc: nil
  1157  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1158  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1159  .  .  .  .  .  .  .  .  .  NamePos: 47:27
  1160  .  .  .  .  .  .  .  .  .  Name: "user"
  1161  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1162  .  .  .  .  .  .  .  .  .  .  Kind: var
  1163  .  .  .  .  .  .  .  .  .  .  Name: "user"
  1164  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1155)
  1165  .  .  .  .  .  .  .  .  .  .  Data: nil
  1166  .  .  .  .  .  .  .  .  .  .  Type: nil
  1167  .  .  .  .  .  .  .  .  .  }
  1168  .  .  .  .  .  .  .  .  }
  1169  .  .  .  .  .  .  .  }
  1170  .  .  .  .  .  .  .  Type: *ast.StarExpr {
  1171  .  .  .  .  .  .  .  .  Star: 47:32
  1172  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1173  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1174  .  .  .  .  .  .  .  .  .  .  NamePos: 47:33
  1175  .  .  .  .  .  .  .  .  .  .  Name: "model"
  1176  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1177  .  .  .  .  .  .  .  .  .  }
  1178  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1179  .  .  .  .  .  .  .  .  .  .  NamePos: 47:39
  1180  .  .  .  .  .  .  .  .  .  .  Name: "User"
  1181  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1182  .  .  .  .  .  .  .  .  .  }
  1183  .  .  .  .  .  .  .  .  }
  1184  .  .  .  .  .  .  .  }
  1185  .  .  .  .  .  .  .  Tag: nil
  1186  .  .  .  .  .  .  .  Comment: nil
  1187  .  .  .  .  .  .  }
  1188  .  .  .  .  .  }
  1189  .  .  .  .  .  Closing: 47:43
  1190  .  .  .  .  }
  1191  .  .  .  .  Results: *ast.FieldList {
  1192  .  .  .  .  .  Opening: 47:45
  1193  .  .  .  .  .  List: []*ast.Field (len = 2) {
  1194  .  .  .  .  .  .  0: *ast.Field {
  1195  .  .  .  .  .  .  .  Doc: nil
  1196  .  .  .  .  .  .  .  Names: nil
  1197  .  .  .  .  .  .  .  Type: *ast.StarExpr {
  1198  .  .  .  .  .  .  .  .  Star: 47:46
  1199  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1200  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1201  .  .  .  .  .  .  .  .  .  .  NamePos: 47:47
  1202  .  .  .  .  .  .  .  .  .  .  Name: "model"
  1203  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1204  .  .  .  .  .  .  .  .  .  }
  1205  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1206  .  .  .  .  .  .  .  .  .  .  NamePos: 47:53
  1207  .  .  .  .  .  .  .  .  .  .  Name: "User"
  1208  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1209  .  .  .  .  .  .  .  .  .  }
  1210  .  .  .  .  .  .  .  .  }
  1211  .  .  .  .  .  .  .  }
  1212  .  .  .  .  .  .  .  Tag: nil
  1213  .  .  .  .  .  .  .  Comment: nil
  1214  .  .  .  .  .  .  }
  1215  .  .  .  .  .  .  1: *ast.Field {
  1216  .  .  .  .  .  .  .  Doc: nil
  1217  .  .  .  .  .  .  .  Names: nil
  1218  .  .  .  .  .  .  .  Type: *ast.Ident {
  1219  .  .  .  .  .  .  .  .  NamePos: 47:59
  1220  .  .  .  .  .  .  .  .  Name: "error"
  1221  .  .  .  .  .  .  .  .  Obj: nil
  1222  .  .  .  .  .  .  .  }
  1223  .  .  .  .  .  .  .  Tag: nil
  1224  .  .  .  .  .  .  .  Comment: nil
  1225  .  .  .  .  .  .  }
  1226  .  .  .  .  .  }
  1227  .  .  .  .  .  Closing: 47:64
  1228  .  .  .  .  }
  1229  .  .  .  }
  1230  .  .  .  Body: *ast.BlockStmt {
  1231  .  .  .  .  Lbrace: 47:66
  1232  .  .  .  .  List: []ast.Stmt (len = 2) {
  1233  .  .  .  .  .  0: *ast.ExprStmt {
  1234  .  .  .  .  .  .  X: *ast.CallExpr {
  1235  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1236  .  .  .  .  .  .  .  .  NamePos: 48:2
  1237  .  .  .  .  .  .  .  .  Name: "Select"
  1238  .  .  .  .  .  .  .  .  Obj: nil
  1239  .  .  .  .  .  .  .  }
  1240  .  .  .  .  .  .  .  Lparen: 48:8
  1241  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1242  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1243  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1244  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1245  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1246  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1247  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1248  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1249  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1250  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 48:9
  1251  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "SQL"
  1252  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1253  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1254  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 48:12
  1255  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: nil
  1256  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1257  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 48:13
  1258  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1259  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1260  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 49:3
  1261  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Stmt"
  1262  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1263  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1264  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1265  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 49:7
  1266  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1267  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  1268  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 49:8
  1269  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1270  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"SELECT * FROM t_user\""
  1271  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1272  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1273  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1274  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 49:30
  1275  .  .  .  .  .  .  .  .  .  .  .  .  }
  1276  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1277  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 50:3
  1278  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Where"
  1279  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1280  .  .  .  .  .  .  .  .  .  .  .  .  }
  1281  .  .  .  .  .  .  .  .  .  .  .  }
  1282  .  .  .  .  .  .  .  .  .  .  .  Lparen: 50:8
  1283  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1284  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1285  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1286  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1287  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1288  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 50:9
  1289  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "If"
  1290  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1291  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1292  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 50:11
  1293  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  1294  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  1295  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1296  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1297  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 50:12
  1298  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "user"
  1299  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1161)
  1300  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1301  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1302  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 50:17
  1303  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Username"
  1304  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1305  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1306  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1307  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: 50:26
  1308  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !=
  1309  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  1310  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 50:29
  1311  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1312  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\""
  1313  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1314  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1315  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
  1316  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 50:33
  1317  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1318  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"username = #{user.Username}\""
  1319  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1320  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1321  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1322  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 50:62
  1323  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1324  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1325  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 51:4
  1326  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "If"
  1327  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1328  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1329  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1330  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 51:6
  1331  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  1332  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  1333  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1334  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1335  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 51:7
  1336  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "user"
  1337  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1161)
  1338  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1339  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1340  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 51:12
  1341  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Address"
  1342  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1343  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1344  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1345  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: 51:20
  1346  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !=
  1347  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  1348  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 51:23
  1349  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1350  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\""
  1351  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1352  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1353  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
  1354  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 51:27
  1355  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1356  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"address = #{user.Address}\""
  1357  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1358  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1359  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1360  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 51:54
  1361  .  .  .  .  .  .  .  .  .  .  .  .  }
  1362  .  .  .  .  .  .  .  .  .  .  .  }
  1363  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1364  .  .  .  .  .  .  .  .  .  .  .  Rparen: 51:55
  1365  .  .  .  .  .  .  .  .  .  .  }
  1366  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1367  .  .  .  .  .  .  .  .  .  .  .  NamePos: 52:3
  1368  .  .  .  .  .  .  .  .  .  .  .  Name: "Build"
  1369  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1370  .  .  .  .  .  .  .  .  .  .  }
  1371  .  .  .  .  .  .  .  .  .  }
  1372  .  .  .  .  .  .  .  .  .  Lparen: 52:8
  1373  .  .  .  .  .  .  .  .  .  Args: nil
  1374  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1375  .  .  .  .  .  .  .  .  .  Rparen: 52:9
  1376  .  .  .  .  .  .  .  .  }
  1377  .  .  .  .  .  .  .  }
  1378  .  .  .  .  .  .  .  Ellipsis: -
  1379  .  .  .  .  .  .  .  Rparen: 52:10
  1380  .  .  .  .  .  .  }
  1381  .  .  .  .  .  }
  1382  .  .  .  .  .  1: *ast.ExprStmt {
  1383  .  .  .  .  .  .  X: *ast.CallExpr {
  1384  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1385  .  .  .  .  .  .  .  .  NamePos: 53:2
  1386  .  .  .  .  .  .  .  .  Name: "panic"
  1387  .  .  .  .  .  .  .  .  Obj: nil
  1388  .  .  .  .  .  .  .  }
  1389  .  .  .  .  .  .  .  Lparen: 53:7
  1390  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1391  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  1392  .  .  .  .  .  .  .  .  .  ValuePos: 53:8
  1393  .  .  .  .  .  .  .  .  .  Kind: STRING
  1394  .  .  .  .  .  .  .  .  .  Value: "\"\""
  1395  .  .  .  .  .  .  .  .  }
  1396  .  .  .  .  .  .  .  }
  1397  .  .  .  .  .  .  .  Ellipsis: -
  1398  .  .  .  .  .  .  .  Rparen: 53:10
  1399  .  .  .  .  .  .  }
  1400  .  .  .  .  .  }
  1401  .  .  .  .  }
  1402  .  .  .  .  Rbrace: 54:1
  1403  .  .  .  }
  1404  .  .  }
  1405  .  .  8: *ast.FuncDecl {
  1406  .  .  .  Doc: nil
  1407  .  .  .  Recv: *ast.FieldList {
  1408  .  .  .  .  Opening: 56:6
  1409  .  .  .  .  List: []*ast.Field (len = 1) {
  1410  .  .  .  .  .  0: *ast.Field {
  1411  .  .  .  .  .  .  Doc: nil
  1412  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1413  .  .  .  .  .  .  .  0: *ast.Ident {
  1414  .  .  .  .  .  .  .  .  NamePos: 56:7
  1415  .  .  .  .  .  .  .  .  Name: "m"
  1416  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1417  .  .  .  .  .  .  .  .  .  Kind: var
  1418  .  .  .  .  .  .  .  .  .  Name: "m"
  1419  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1410)
  1420  .  .  .  .  .  .  .  .  .  Data: nil
  1421  .  .  .  .  .  .  .  .  .  Type: nil
  1422  .  .  .  .  .  .  .  .  }
  1423  .  .  .  .  .  .  .  }
  1424  .  .  .  .  .  .  }
  1425  .  .  .  .  .  .  Type: *ast.StarExpr {
  1426  .  .  .  .  .  .  .  Star: 56:9
  1427  .  .  .  .  .  .  .  X: *ast.Ident {
  1428  .  .  .  .  .  .  .  .  NamePos: 56:10
  1429  .  .  .  .  .  .  .  .  Name: "UserMapper"
  1430  .  .  .  .  .  .  .  .  Obj: *(obj @ 84)
  1431  .  .  .  .  .  .  .  }
  1432  .  .  .  .  .  .  }
  1433  .  .  .  .  .  .  Tag: nil
  1434  .  .  .  .  .  .  Comment: nil
  1435  .  .  .  .  .  }
  1436  .  .  .  .  }
  1437  .  .  .  .  Closing: 56:20
  1438  .  .  .  }
  1439  .  .  .  Name: *ast.Ident {
  1440  .  .  .  .  NamePos: 56:22
  1441  .  .  .  .  Name: "BatchAdd"
  1442  .  .  .  .  Obj: nil
  1443  .  .  .  }
  1444  .  .  .  Type: *ast.FuncType {
  1445  .  .  .  .  Func: 56:1
  1446  .  .  .  .  TypeParams: nil
  1447  .  .  .  .  Params: *ast.FieldList {
  1448  .  .  .  .  .  Opening: 56:30
  1449  .  .  .  .  .  List: []*ast.Field (len = 1) {
  1450  .  .  .  .  .  .  0: *ast.Field {
  1451  .  .  .  .  .  .  .  Doc: nil
  1452  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1453  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1454  .  .  .  .  .  .  .  .  .  NamePos: 56:31
  1455  .  .  .  .  .  .  .  .  .  Name: "users"
  1456  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1457  .  .  .  .  .  .  .  .  .  .  Kind: var
  1458  .  .  .  .  .  .  .  .  .  .  Name: "users"
  1459  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1450)
  1460  .  .  .  .  .  .  .  .  .  .  Data: nil
  1461  .  .  .  .  .  .  .  .  .  .  Type: nil
  1462  .  .  .  .  .  .  .  .  .  }
  1463  .  .  .  .  .  .  .  .  }
  1464  .  .  .  .  .  .  .  }
  1465  .  .  .  .  .  .  .  Type: *ast.ArrayType {
  1466  .  .  .  .  .  .  .  .  Lbrack: 56:37
  1467  .  .  .  .  .  .  .  .  Len: nil
  1468  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
  1469  .  .  .  .  .  .  .  .  .  Star: 56:39
  1470  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1471  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1472  .  .  .  .  .  .  .  .  .  .  .  NamePos: 56:40
  1473  .  .  .  .  .  .  .  .  .  .  .  Name: "model"
  1474  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1475  .  .  .  .  .  .  .  .  .  .  }
  1476  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1477  .  .  .  .  .  .  .  .  .  .  .  NamePos: 56:46
  1478  .  .  .  .  .  .  .  .  .  .  .  Name: "User"
  1479  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1480  .  .  .  .  .  .  .  .  .  .  }
  1481  .  .  .  .  .  .  .  .  .  }
  1482  .  .  .  .  .  .  .  .  }
  1483  .  .  .  .  .  .  .  }
  1484  .  .  .  .  .  .  .  Tag: nil
  1485  .  .  .  .  .  .  .  Comment: nil
  1486  .  .  .  .  .  .  }
  1487  .  .  .  .  .  }
  1488  .  .  .  .  .  Closing: 56:50
  1489  .  .  .  .  }
  1490  .  .  .  .  Results: *ast.FieldList {
  1491  .  .  .  .  .  Opening: -
  1492  .  .  .  .  .  List: []*ast.Field (len = 1) {
  1493  .  .  .  .  .  .  0: *ast.Field {
  1494  .  .  .  .  .  .  .  Doc: nil
  1495  .  .  .  .  .  .  .  Names: nil
  1496  .  .  .  .  .  .  .  Type: *ast.Ident {
  1497  .  .  .  .  .  .  .  .  NamePos: 56:52
  1498  .  .  .  .  .  .  .  .  Name: "error"
  1499  .  .  .  .  .  .  .  .  Obj: nil
  1500  .  .  .  .  .  .  .  }
  1501  .  .  .  .  .  .  .  Tag: nil
  1502  .  .  .  .  .  .  .  Comment: nil
  1503  .  .  .  .  .  .  }
  1504  .  .  .  .  .  }
  1505  .  .  .  .  .  Closing: -
  1506  .  .  .  .  }
  1507  .  .  .  }
  1508  .  .  .  Body: *ast.BlockStmt {
  1509  .  .  .  .  Lbrace: 56:58
  1510  .  .  .  .  List: []ast.Stmt (len = 2) {
  1511  .  .  .  .  .  0: *ast.ExprStmt {
  1512  .  .  .  .  .  .  X: *ast.CallExpr {
  1513  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1514  .  .  .  .  .  .  .  .  NamePos: 57:2
  1515  .  .  .  .  .  .  .  .  Name: "Insert"
  1516  .  .  .  .  .  .  .  .  Obj: nil
  1517  .  .  .  .  .  .  .  }
  1518  .  .  .  .  .  .  .  Lparen: 57:8
  1519  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1520  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1521  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1522  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1523  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1524  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1525  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1526  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1527  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1528  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 57:9
  1529  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "SQL"
  1530  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1531  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1532  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 57:12
  1533  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: nil
  1534  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1535  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 57:13
  1536  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1537  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1538  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 58:3
  1539  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Stmt"
  1540  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1541  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1542  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1543  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 58:7
  1544  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1545  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  1546  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 58:8
  1547  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1548  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"INSERT INTO t_user (id, username, password, create_at, email, address) VALUES \""
  1549  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1550  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1551  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1552  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 58:88
  1553  .  .  .  .  .  .  .  .  .  .  .  .  }
  1554  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1555  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 59:3
  1556  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Foreach"
  1557  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1558  .  .  .  .  .  .  .  .  .  .  .  .  }
  1559  .  .  .  .  .  .  .  .  .  .  .  }
  1560  .  .  .  .  .  .  .  .  .  .  .  Lparen: 59:10
  1561  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 6) {
  1562  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  1563  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 59:11
  1564  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1565  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"users\""
  1566  .  .  .  .  .  .  .  .  .  .  .  .  }
  1567  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
  1568  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 59:20
  1569  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1570  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"user\""
  1571  .  .  .  .  .  .  .  .  .  .  .  .  }
  1572  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {
  1573  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 59:28
  1574  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1575  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\",\""
  1576  .  .  .  .  .  .  .  .  .  .  .  .  }
  1577  .  .  .  .  .  .  .  .  .  .  .  .  3: *ast.BasicLit {
  1578  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 59:33
  1579  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1580  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\""
  1581  .  .  .  .  .  .  .  .  .  .  .  .  }
  1582  .  .  .  .  .  .  .  .  .  .  .  .  4: *ast.BasicLit {
  1583  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 59:37
  1584  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1585  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\""
  1586  .  .  .  .  .  .  .  .  .  .  .  .  }
  1587  .  .  .  .  .  .  .  .  .  .  .  .  5: *ast.BasicLit {
  1588  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 60:4
  1589  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1590  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"(#{user.Id}, #{user.Username}, #{user.Password}, #{user.CreateAt}, #{user.Email}, #{user.Address})\""
  1591  .  .  .  .  .  .  .  .  .  .  .  .  }
  1592  .  .  .  .  .  .  .  .  .  .  .  }
  1593  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1594  .  .  .  .  .  .  .  .  .  .  .  Rparen: 60:104
  1595  .  .  .  .  .  .  .  .  .  .  }
  1596  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1597  .  .  .  .  .  .  .  .  .  .  .  NamePos: 60:106
  1598  .  .  .  .  .  .  .  .  .  .  .  Name: "Build"
  1599  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1600  .  .  .  .  .  .  .  .  .  .  }
  1601  .  .  .  .  .  .  .  .  .  }
  1602  .  .  .  .  .  .  .  .  .  Lparen: 60:111
  1603  .  .  .  .  .  .  .  .  .  Args: nil
  1604  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1605  .  .  .  .  .  .  .  .  .  Rparen: 60:112
  1606  .  .  .  .  .  .  .  .  }
  1607  .  .  .  .  .  .  .  }
  1608  .  .  .  .  .  .  .  Ellipsis: -
  1609  .  .  .  .  .  .  .  Rparen: 60:113
  1610  .  .  .  .  .  .  }
  1611  .  .  .  .  .  }
  1612  .  .  .  .  .  1: *ast.ExprStmt {
  1613  .  .  .  .  .  .  X: *ast.CallExpr {
  1614  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1615  .  .  .  .  .  .  .  .  NamePos: 61:2
  1616  .  .  .  .  .  .  .  .  Name: "panic"
  1617  .  .  .  .  .  .  .  .  Obj: nil
  1618  .  .  .  .  .  .  .  }
  1619  .  .  .  .  .  .  .  Lparen: 61:7
  1620  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1621  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  1622  .  .  .  .  .  .  .  .  .  ValuePos: 61:8
  1623  .  .  .  .  .  .  .  .  .  Kind: STRING
  1624  .  .  .  .  .  .  .  .  .  Value: "\"\""
  1625  .  .  .  .  .  .  .  .  }
  1626  .  .  .  .  .  .  .  }
  1627  .  .  .  .  .  .  .  Ellipsis: -
  1628  .  .  .  .  .  .  .  Rparen: 61:10
  1629  .  .  .  .  .  .  }
  1630  .  .  .  .  .  }
  1631  .  .  .  .  }
  1632  .  .  .  .  Rbrace: 62:1
  1633  .  .  .  }
  1634  .  .  }
  1635  .  .  9: *ast.FuncDecl {
  1636  .  .  .  Doc: nil
  1637  .  .  .  Recv: *ast.FieldList {
  1638  .  .  .  .  Opening: 64:6
  1639  .  .  .  .  List: []*ast.Field (len = 1) {
  1640  .  .  .  .  .  0: *ast.Field {
  1641  .  .  .  .  .  .  Doc: nil
  1642  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1643  .  .  .  .  .  .  .  0: *ast.Ident {
  1644  .  .  .  .  .  .  .  .  NamePos: 64:7
  1645  .  .  .  .  .  .  .  .  Name: "m"
  1646  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1647  .  .  .  .  .  .  .  .  .  Kind: var
  1648  .  .  .  .  .  .  .  .  .  Name: "m"
  1649  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1640)
  1650  .  .  .  .  .  .  .  .  .  Data: nil
  1651  .  .  .  .  .  .  .  .  .  Type: nil
  1652  .  .  .  .  .  .  .  .  }
  1653  .  .  .  .  .  .  .  }
  1654  .  .  .  .  .  .  }
  1655  .  .  .  .  .  .  Type: *ast.StarExpr {
  1656  .  .  .  .  .  .  .  Star: 64:9
  1657  .  .  .  .  .  .  .  X: *ast.Ident {
  1658  .  .  .  .  .  .  .  .  NamePos: 64:10
  1659  .  .  .  .  .  .  .  .  Name: "UserMapper"
  1660  .  .  .  .  .  .  .  .  Obj: *(obj @ 84)
  1661  .  .  .  .  .  .  .  }
  1662  .  .  .  .  .  .  }
  1663  .  .  .  .  .  .  Tag: nil
  1664  .  .  .  .  .  .  Comment: nil
  1665  .  .  .  .  .  }
  1666  .  .  .  .  }
  1667  .  .  .  .  Closing: 64:20
  1668  .  .  .  }
  1669  .  .  .  Name: *ast.Ident {
  1670  .  .  .  .  NamePos: 64:22
  1671  .  .  .  .  Name: "UpdateByIdOrUsername"
  1672  .  .  .  .  Obj: nil
  1673  .  .  .  }
  1674  .  .  .  Type: *ast.FuncType {
  1675  .  .  .  .  Func: 64:1
  1676  .  .  .  .  TypeParams: nil
  1677  .  .  .  .  Params: *ast.FieldList {
  1678  .  .  .  .  .  Opening: 64:42
  1679  .  .  .  .  .  List: []*ast.Field (len = 1) {
  1680  .  .  .  .  .  .  0: *ast.Field {
  1681  .  .  .  .  .  .  .  Doc: nil
  1682  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1683  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1684  .  .  .  .  .  .  .  .  .  NamePos: 64:43
  1685  .  .  .  .  .  .  .  .  .  Name: "user"
  1686  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1687  .  .  .  .  .  .  .  .  .  .  Kind: var
  1688  .  .  .  .  .  .  .  .  .  .  Name: "user"
  1689  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1680)
  1690  .  .  .  .  .  .  .  .  .  .  Data: nil
  1691  .  .  .  .  .  .  .  .  .  .  Type: nil
  1692  .  .  .  .  .  .  .  .  .  }
  1693  .  .  .  .  .  .  .  .  }
  1694  .  .  .  .  .  .  .  }
  1695  .  .  .  .  .  .  .  Type: *ast.StarExpr {
  1696  .  .  .  .  .  .  .  .  Star: 64:48
  1697  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1698  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1699  .  .  .  .  .  .  .  .  .  .  NamePos: 64:49
  1700  .  .  .  .  .  .  .  .  .  .  Name: "model"
  1701  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1702  .  .  .  .  .  .  .  .  .  }
  1703  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1704  .  .  .  .  .  .  .  .  .  .  NamePos: 64:55
  1705  .  .  .  .  .  .  .  .  .  .  Name: "User"
  1706  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1707  .  .  .  .  .  .  .  .  .  }
  1708  .  .  .  .  .  .  .  .  }
  1709  .  .  .  .  .  .  .  }
  1710  .  .  .  .  .  .  .  Tag: nil
  1711  .  .  .  .  .  .  .  Comment: nil
  1712  .  .  .  .  .  .  }
  1713  .  .  .  .  .  }
  1714  .  .  .  .  .  Closing: 64:59
  1715  .  .  .  .  }
  1716  .  .  .  .  Results: *ast.FieldList {
  1717  .  .  .  .  .  Opening: -
  1718  .  .  .  .  .  List: []*ast.Field (len = 1) {
  1719  .  .  .  .  .  .  0: *ast.Field {
  1720  .  .  .  .  .  .  .  Doc: nil
  1721  .  .  .  .  .  .  .  Names: nil
  1722  .  .  .  .  .  .  .  Type: *ast.Ident {
  1723  .  .  .  .  .  .  .  .  NamePos: 64:61
  1724  .  .  .  .  .  .  .  .  Name: "error"
  1725  .  .  .  .  .  .  .  .  Obj: nil
  1726  .  .  .  .  .  .  .  }
  1727  .  .  .  .  .  .  .  Tag: nil
  1728  .  .  .  .  .  .  .  Comment: nil
  1729  .  .  .  .  .  .  }
  1730  .  .  .  .  .  }
  1731  .  .  .  .  .  Closing: -
  1732  .  .  .  .  }
  1733  .  .  .  }
  1734  .  .  .  Body: *ast.BlockStmt {
  1735  .  .  .  .  Lbrace: 64:67
  1736  .  .  .  .  List: []ast.Stmt (len = 2) {
  1737  .  .  .  .  .  0: *ast.ExprStmt {
  1738  .  .  .  .  .  .  X: *ast.CallExpr {
  1739  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1740  .  .  .  .  .  .  .  .  NamePos: 65:2
  1741  .  .  .  .  .  .  .  .  Name: "Update"
  1742  .  .  .  .  .  .  .  .  Obj: nil
  1743  .  .  .  .  .  .  .  }
  1744  .  .  .  .  .  .  .  Lparen: 65:8
  1745  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1746  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1747  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1748  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1749  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1750  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1751  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1752  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1753  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1754  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1755  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1756  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 65:9
  1757  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "SQL"
  1758  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1759  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1760  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 65:12
  1761  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: nil
  1762  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1763  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 65:13
  1764  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1765  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1766  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 66:3
  1767  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Stmt"
  1768  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1769  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1770  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1771  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 66:7
  1772  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1773  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  1774  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 66:8
  1775  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1776  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"UPDATE t_user\""
  1777  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1778  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1779  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1780  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 66:23
  1781  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1782  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1783  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 67:3
  1784  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Set"
  1785  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1786  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1787  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1788  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 67:6
  1789  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1790  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1791  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1792  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1793  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1794  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 67:7
  1795  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "If"
  1796  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1797  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1798  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 67:9
  1799  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  1800  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  1801  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1802  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1803  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 67:10
  1804  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "user"
  1805  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1686)
  1806  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1807  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1808  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 67:15
  1809  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Password"
  1810  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1811  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1812  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1813  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: 67:24
  1814  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !=
  1815  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  1816  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 67:27
  1817  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1818  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\""
  1819  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1820  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1821  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
  1822  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 67:31
  1823  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1824  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"password = #{user.Password}\""
  1825  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1826  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1827  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1828  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 67:60
  1829  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1830  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1831  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 68:4
  1832  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "If"
  1833  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1834  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1835  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1836  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 68:6
  1837  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  1838  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  1839  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1840  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1841  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 68:7
  1842  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "user"
  1843  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1686)
  1844  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1845  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1846  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 68:12
  1847  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Email"
  1848  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1849  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1850  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1851  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: 68:18
  1852  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !=
  1853  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  1854  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 68:21
  1855  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1856  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\""
  1857  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1858  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1859  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
  1860  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 68:25
  1861  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1862  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"email = #{user.Email}\""
  1863  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1864  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1865  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1866  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 68:48
  1867  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1868  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1869  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1870  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 68:49
  1871  .  .  .  .  .  .  .  .  .  .  .  .  }
  1872  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1873  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 69:3
  1874  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Where"
  1875  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1876  .  .  .  .  .  .  .  .  .  .  .  .  }
  1877  .  .  .  .  .  .  .  .  .  .  .  }
  1878  .  .  .  .  .  .  .  .  .  .  .  Lparen: 69:8
  1879  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1880  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1881  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1882  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1883  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1884  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1885  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1886  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 69:9
  1887  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Choose"
  1888  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1889  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1890  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 69:15
  1891  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: nil
  1892  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1893  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 69:16
  1894  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1895  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1896  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 69:18
  1897  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "When"
  1898  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1899  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1900  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1901  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 69:22
  1902  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  1903  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  1904  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1905  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1906  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 69:23
  1907  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "user"
  1908  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1686)
  1909  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1910  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1911  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 69:28
  1912  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Id"
  1913  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1914  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1915  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1916  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: 69:31
  1917  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: >
  1918  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  1919  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 69:33
  1920  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT
  1921  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "0"
  1922  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1923  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1924  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
  1925  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 69:36
  1926  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1927  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"id = #{user.Id}\""
  1928  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1929  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1930  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1931  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 69:53
  1932  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1933  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1934  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 70:4
  1935  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "When"
  1936  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1937  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1938  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1939  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 70:8
  1940  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  1941  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  1942  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1943  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1944  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 70:9
  1945  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "user"
  1946  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1686)
  1947  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1948  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1949  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 70:14
  1950  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Username"
  1951  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1952  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1953  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1954  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: 70:23
  1955  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !=
  1956  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  1957  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 70:26
  1958  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1959  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\""
  1960  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1961  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1962  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
  1963  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 70:30
  1964  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1965  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"username = #{user.Username}\""
  1966  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1967  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1968  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1969  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 70:59
  1970  .  .  .  .  .  .  .  .  .  .  .  .  }
  1971  .  .  .  .  .  .  .  .  .  .  .  }
  1972  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1973  .  .  .  .  .  .  .  .  .  .  .  Rparen: 70:60
  1974  .  .  .  .  .  .  .  .  .  .  }
  1975  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1976  .  .  .  .  .  .  .  .  .  .  .  NamePos: 71:3
  1977  .  .  .  .  .  .  .  .  .  .  .  Name: "Build"
  1978  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1979  .  .  .  .  .  .  .  .  .  .  }
  1980  .  .  .  .  .  .  .  .  .  }
  1981  .  .  .  .  .  .  .  .  .  Lparen: 71:8
  1982  .  .  .  .  .  .  .  .  .  Args: nil
  1983  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1984  .  .  .  .  .  .  .  .  .  Rparen: 71:9
  1985  .  .  .  .  .  .  .  .  }
  1986  .  .  .  .  .  .  .  }
  1987  .  .  .  .  .  .  .  Ellipsis: -
  1988  .  .  .  .  .  .  .  Rparen: 71:10
  1989  .  .  .  .  .  .  }
  1990  .  .  .  .  .  }
  1991  .  .  .  .  .  1: *ast.ExprStmt {
  1992  .  .  .  .  .  .  X: *ast.CallExpr {
  1993  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1994  .  .  .  .  .  .  .  .  NamePos: 72:2
  1995  .  .  .  .  .  .  .  .  Name: "panic"
  1996  .  .  .  .  .  .  .  .  Obj: nil
  1997  .  .  .  .  .  .  .  }
  1998  .  .  .  .  .  .  .  Lparen: 72:7
  1999  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  2000  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  2001  .  .  .  .  .  .  .  .  .  ValuePos: 72:8
  2002  .  .  .  .  .  .  .  .  .  Kind: STRING
  2003  .  .  .  .  .  .  .  .  .  Value: "\"\""
  2004  .  .  .  .  .  .  .  .  }
  2005  .  .  .  .  .  .  .  }
  2006  .  .  .  .  .  .  .  Ellipsis: -
  2007  .  .  .  .  .  .  .  Rparen: 72:10
  2008  .  .  .  .  .  .  }
  2009  .  .  .  .  .  }
  2010  .  .  .  .  }
  2011  .  .  .  .  Rbrace: 73:1
  2012  .  .  .  }
  2013  .  .  }
  2014  .  .  10: *ast.FuncDecl {
  2015  .  .  .  Doc: nil
  2016  .  .  .  Recv: *ast.FieldList {
  2017  .  .  .  .  Opening: 75:6
  2018  .  .  .  .  List: []*ast.Field (len = 1) {
  2019  .  .  .  .  .  0: *ast.Field {
  2020  .  .  .  .  .  .  Doc: nil
  2021  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  2022  .  .  .  .  .  .  .  0: *ast.Ident {
  2023  .  .  .  .  .  .  .  .  NamePos: 75:7
  2024  .  .  .  .  .  .  .  .  Name: "u"
  2025  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  2026  .  .  .  .  .  .  .  .  .  Kind: var
  2027  .  .  .  .  .  .  .  .  .  Name: "u"
  2028  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2019)
  2029  .  .  .  .  .  .  .  .  .  Data: nil
  2030  .  .  .  .  .  .  .  .  .  Type: nil
  2031  .  .  .  .  .  .  .  .  }
  2032  .  .  .  .  .  .  .  }
  2033  .  .  .  .  .  .  }
  2034  .  .  .  .  .  .  Type: *ast.StarExpr {
  2035  .  .  .  .  .  .  .  Star: 75:9
  2036  .  .  .  .  .  .  .  X: *ast.Ident {
  2037  .  .  .  .  .  .  .  .  NamePos: 75:10
  2038  .  .  .  .  .  .  .  .  Name: "UserMapper"
  2039  .  .  .  .  .  .  .  .  Obj: *(obj @ 84)
  2040  .  .  .  .  .  .  .  }
  2041  .  .  .  .  .  .  }
  2042  .  .  .  .  .  .  Tag: nil
  2043  .  .  .  .  .  .  Comment: nil
  2044  .  .  .  .  .  }
  2045  .  .  .  .  }
  2046  .  .  .  .  Closing: 75:20
  2047  .  .  .  }
  2048  .  .  .  Name: *ast.Ident {
  2049  .  .  .  .  NamePos: 75:22
  2050  .  .  .  .  Name: "SelectPage"
  2051  .  .  .  .  Obj: nil
  2052  .  .  .  }
  2053  .  .  .  Type: *ast.FuncType {
  2054  .  .  .  .  Func: 75:1
  2055  .  .  .  .  TypeParams: nil
  2056  .  .  .  .  Params: *ast.FieldList {
  2057  .  .  .  .  .  Opening: 75:32
  2058  .  .  .  .  .  List: []*ast.Field (len = 2) {
  2059  .  .  .  .  .  .  0: *ast.Field {
  2060  .  .  .  .  .  .  .  Doc: nil
  2061  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  2062  .  .  .  .  .  .  .  .  0: *ast.Ident {
  2063  .  .  .  .  .  .  .  .  .  NamePos: 75:33
  2064  .  .  .  .  .  .  .  .  .  Name: "page"
  2065  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  2066  .  .  .  .  .  .  .  .  .  .  Kind: var
  2067  .  .  .  .  .  .  .  .  .  .  Name: "page"
  2068  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2059)
  2069  .  .  .  .  .  .  .  .  .  .  Data: nil
  2070  .  .  .  .  .  .  .  .  .  .  Type: nil
  2071  .  .  .  .  .  .  .  .  .  }
  2072  .  .  .  .  .  .  .  .  }
  2073  .  .  .  .  .  .  .  }
  2074  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  2075  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2076  .  .  .  .  .  .  .  .  .  NamePos: 75:38
  2077  .  .  .  .  .  .  .  .  .  Name: "vulcan"
  2078  .  .  .  .  .  .  .  .  .  Obj: nil
  2079  .  .  .  .  .  .  .  .  }
  2080  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2081  .  .  .  .  .  .  .  .  .  NamePos: 75:45
  2082  .  .  .  .  .  .  .  .  .  Name: "Page"
  2083  .  .  .  .  .  .  .  .  .  Obj: nil
  2084  .  .  .  .  .  .  .  .  }
  2085  .  .  .  .  .  .  .  }
  2086  .  .  .  .  .  .  .  Tag: nil
  2087  .  .  .  .  .  .  .  Comment: nil
  2088  .  .  .  .  .  .  }
  2089  .  .  .  .  .  .  1: *ast.Field {
  2090  .  .  .  .  .  .  .  Doc: nil
  2091  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  2092  .  .  .  .  .  .  .  .  0: *ast.Ident {
  2093  .  .  .  .  .  .  .  .  .  NamePos: 75:51
  2094  .  .  .  .  .  .  .  .  .  Name: "cond"
  2095  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  2096  .  .  .  .  .  .  .  .  .  .  Kind: var
  2097  .  .  .  .  .  .  .  .  .  .  Name: "cond"
  2098  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 2089)
  2099  .  .  .  .  .  .  .  .  .  .  Data: nil
  2100  .  .  .  .  .  .  .  .  .  .  Type: nil
  2101  .  .  .  .  .  .  .  .  .  }
  2102  .  .  .  .  .  .  .  .  }
  2103  .  .  .  .  .  .  .  }
  2104  .  .  .  .  .  .  .  Type: *ast.StarExpr {
  2105  .  .  .  .  .  .  .  .  Star: 75:56
  2106  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  2107  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2108  .  .  .  .  .  .  .  .  .  .  NamePos: 75:57
  2109  .  .  .  .  .  .  .  .  .  .  Name: "model"
  2110  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2111  .  .  .  .  .  .  .  .  .  }
  2112  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2113  .  .  .  .  .  .  .  .  .  .  NamePos: 75:63
  2114  .  .  .  .  .  .  .  .  .  .  Name: "QueryCond"
  2115  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2116  .  .  .  .  .  .  .  .  .  }
  2117  .  .  .  .  .  .  .  .  }
  2118  .  .  .  .  .  .  .  }
  2119  .  .  .  .  .  .  .  Tag: nil
  2120  .  .  .  .  .  .  .  Comment: nil
  2121  .  .  .  .  .  .  }
  2122  .  .  .  .  .  }
  2123  .  .  .  .  .  Closing: 75:72
  2124  .  .  .  .  }
  2125  .  .  .  .  Results: *ast.FieldList {
  2126  .  .  .  .  .  Opening: 75:74
  2127  .  .  .  .  .  List: []*ast.Field (len = 2) {
  2128  .  .  .  .  .  .  0: *ast.Field {
  2129  .  .  .  .  .  .  .  Doc: nil
  2130  .  .  .  .  .  .  .  Names: nil
  2131  .  .  .  .  .  .  .  Type: *ast.ArrayType {
  2132  .  .  .  .  .  .  .  .  Lbrack: 75:75
  2133  .  .  .  .  .  .  .  .  Len: nil
  2134  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
  2135  .  .  .  .  .  .  .  .  .  Star: 75:77
  2136  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  2137  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2138  .  .  .  .  .  .  .  .  .  .  .  NamePos: 75:78
  2139  .  .  .  .  .  .  .  .  .  .  .  Name: "model"
  2140  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2141  .  .  .  .  .  .  .  .  .  .  }
  2142  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2143  .  .  .  .  .  .  .  .  .  .  .  NamePos: 75:84
  2144  .  .  .  .  .  .  .  .  .  .  .  Name: "User"
  2145  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2146  .  .  .  .  .  .  .  .  .  .  }
  2147  .  .  .  .  .  .  .  .  .  }
  2148  .  .  .  .  .  .  .  .  }
  2149  .  .  .  .  .  .  .  }
  2150  .  .  .  .  .  .  .  Tag: nil
  2151  .  .  .  .  .  .  .  Comment: nil
  2152  .  .  .  .  .  .  }
  2153  .  .  .  .  .  .  1: *ast.Field {
  2154  .  .  .  .  .  .  .  Doc: nil
  2155  .  .  .  .  .  .  .  Names: nil
  2156  .  .  .  .  .  .  .  Type: *ast.Ident {
  2157  .  .  .  .  .  .  .  .  NamePos: 75:90
  2158  .  .  .  .  .  .  .  .  Name: "error"
  2159  .  .  .  .  .  .  .  .  Obj: nil
  2160  .  .  .  .  .  .  .  }
  2161  .  .  .  .  .  .  .  Tag: nil
  2162  .  .  .  .  .  .  .  Comment: nil
  2163  .  .  .  .  .  .  }
  2164  .  .  .  .  .  }
  2165  .  .  .  .  .  Closing: 75:95
  2166  .  .  .  .  }
  2167  .  .  .  }
  2168  .  .  .  Body: *ast.BlockStmt {
  2169  .  .  .  .  Lbrace: 75:97
  2170  .  .  .  .  List: []ast.Stmt (len = 2) {
  2171  .  .  .  .  .  0: *ast.ExprStmt {
  2172  .  .  .  .  .  .  X: *ast.CallExpr {
  2173  .  .  .  .  .  .  .  Fun: *ast.Ident {
  2174  .  .  .  .  .  .  .  .  NamePos: 76:2
  2175  .  .  .  .  .  .  .  .  Name: "Select"
  2176  .  .  .  .  .  .  .  .  Obj: nil
  2177  .  .  .  .  .  .  .  }
  2178  .  .  .  .  .  .  .  Lparen: 76:8
  2179  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  2180  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  2181  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  2182  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  2183  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  2184  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  2185  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  2186  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  2187  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  2188  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 76:9
  2189  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "SQL"
  2190  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2191  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2192  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 76:12
  2193  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: nil
  2194  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2195  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 76:13
  2196  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2197  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2198  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 77:3
  2199  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Stmt"
  2200  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2201  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2202  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2203  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 77:7
  2204  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  2205  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  2206  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 77:8
  2207  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  2208  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"SELECT * FROM t_user\""
  2209  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2210  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2211  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2212  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 77:30
  2213  .  .  .  .  .  .  .  .  .  .  .  .  }
  2214  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2215  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 78:3
  2216  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Where"
  2217  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2218  .  .  .  .  .  .  .  .  .  .  .  .  }
  2219  .  .  .  .  .  .  .  .  .  .  .  }
  2220  .  .  .  .  .  .  .  .  .  .  .  Lparen: 78:8
  2221  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  2222  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  2223  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  2224  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  2225  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  2226  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 78:9
  2227  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "If"
  2228  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2229  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2230  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 78:11
  2231  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  2232  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  2233  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  2234  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2235  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 78:12
  2236  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "cond"
  2237  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2095)
  2238  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2239  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2240  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 78:17
  2241  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Username"
  2242  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2243  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2244  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2245  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: 78:26
  2246  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !=
  2247  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  2248  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 78:29
  2249  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  2250  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\""
  2251  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2252  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2253  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
  2254  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 78:33
  2255  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  2256  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"And username = #{cond.Username}\""
  2257  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2258  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2259  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2260  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 78:66
  2261  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2262  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2263  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 79:4
  2264  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "If"
  2265  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2266  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2267  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2268  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 79:6
  2269  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  2270  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  2271  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  2272  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2273  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 79:7
  2274  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "cond"
  2275  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 2095)
  2276  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2277  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2278  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 79:12
  2279  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Address"
  2280  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2281  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2282  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2283  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: 79:20
  2284  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !=
  2285  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  2286  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 79:23
  2287  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  2288  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\""
  2289  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2290  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2291  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
  2292  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 79:27
  2293  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  2294  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"AND address = #{cond.Address} \""
  2295  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2296  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2297  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2298  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 79:59
  2299  .  .  .  .  .  .  .  .  .  .  .  .  }
  2300  .  .  .  .  .  .  .  .  .  .  .  }
  2301  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2302  .  .  .  .  .  .  .  .  .  .  .  Rparen: 79:60
  2303  .  .  .  .  .  .  .  .  .  .  }
  2304  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2305  .  .  .  .  .  .  .  .  .  .  .  NamePos: 79:62
  2306  .  .  .  .  .  .  .  .  .  .  .  Name: "Build"
  2307  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2308  .  .  .  .  .  .  .  .  .  .  }
  2309  .  .  .  .  .  .  .  .  .  }
  2310  .  .  .  .  .  .  .  .  .  Lparen: 79:67
  2311  .  .  .  .  .  .  .  .  .  Args: nil
  2312  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2313  .  .  .  .  .  .  .  .  .  Rparen: 79:68
  2314  .  .  .  .  .  .  .  .  }
  2315  .  .  .  .  .  .  .  }
  2316  .  .  .  .  .  .  .  Ellipsis: -
  2317  .  .  .  .  .  .  .  Rparen: 79:69
  2318  .  .  .  .  .  .  }
  2319  .  .  .  .  .  }
  2320  .  .  .  .  .  1: *ast.ExprStmt {
  2321  .  .  .  .  .  .  X: *ast.CallExpr {
  2322  .  .  .  .  .  .  .  Fun: *ast.Ident {
  2323  .  .  .  .  .  .  .  .  NamePos: 80:2
  2324  .  .  .  .  .  .  .  .  Name: "panic"
  2325  .  .  .  .  .  .  .  .  Obj: nil
  2326  .  .  .  .  .  .  .  }
  2327  .  .  .  .  .  .  .  Lparen: 80:7
  2328  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  2329  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  2330  .  .  .  .  .  .  .  .  .  ValuePos: 80:8
  2331  .  .  .  .  .  .  .  .  .  Kind: STRING
  2332  .  .  .  .  .  .  .  .  .  Value: "\"\""
  2333  .  .  .  .  .  .  .  .  }
  2334  .  .  .  .  .  .  .  }
  2335  .  .  .  .  .  .  .  Ellipsis: -
  2336  .  .  .  .  .  .  .  Rparen: 80:10
  2337  .  .  .  .  .  .  }
  2338  .  .  .  .  .  }
  2339  .  .  .  .  }
  2340  .  .  .  .  Rbrace: 81:1
  2341  .  .  .  }
  2342  .  .  }
  2343  .  }
  2344  .  FileStart: 1:1
  2345  .  FileEnd: 81:3
  2346  .  Scope: *ast.Scope {
  2347  .  .  Outer: nil
  2348  .  .  Objects: map[string]*ast.Object (len = 2) {
  2349  .  .  .  "UserMapper": *(obj @ 84)
  2350  .  .  .  "NewUserMapper": *(obj @ 148)
  2351  .  .  }
  2352  .  }
  2353  .  Imports: []*ast.ImportSpec (len = 4) {
  2354  .  .  0: *(obj @ 22)
  2355  .  .  1: *(obj @ 33)
  2356  .  .  2: *(obj @ 44)
  2357  .  .  3: *(obj @ 59)
  2358  .  }
  2359  .  Unresolved: []*ast.Ident (len = 51) {
  2360  .  .  0: *(obj @ 117)
  2361  .  .  1: *(obj @ 180)
  2362  .  .  2: *(obj @ 323)
  2363  .  .  3: *(obj @ 347)
  2364  .  .  4: *(obj @ 364)
  2365  .  .  5: *(obj @ 383)
  2366  .  .  6: *(obj @ 464)
  2367  .  .  7: *(obj @ 481)
  2368  .  .  8: *(obj @ 492)
  2369  .  .  9: *(obj @ 509)
  2370  .  .  10: *(obj @ 528)
  2371  .  .  11: *(obj @ 612)
  2372  .  .  12: *(obj @ 636)
  2373  .  .  13: *(obj @ 647)
  2374  .  .  14: *(obj @ 679)
  2375  .  .  15: *(obj @ 688)
  2376  .  .  16: *(obj @ 704)
  2377  .  .  17: *(obj @ 744)
  2378  .  .  18: *(obj @ 934)
  2379  .  .  19: *(obj @ 1015)
  2380  .  .  20: *(obj @ 1035)
  2381  .  .  21: *(obj @ 1053)
  2382  .  .  22: *(obj @ 1070)
  2383  .  .  23: *(obj @ 1089)
  2384  .  .  24: *(obj @ 1173)
  2385  .  .  25: *(obj @ 1200)
  2386  .  .  26: *(obj @ 1218)
  2387  .  .  27: *(obj @ 1235)
  2388  .  .  28: *(obj @ 1249)
  2389  .  .  29: *(obj @ 1287)
  2390  .  .  30: *(obj @ 1384)
  2391  .  .  31: *(obj @ 1471)
  2392  .  .  32: *(obj @ 1496)
  2393  .  .  33: *(obj @ 1513)
  2394  .  .  34: *(obj @ 1527)
  2395  .  .  35: *(obj @ 1614)
  2396  .  .  36: *(obj @ 1698)
  2397  .  .  37: *(obj @ 1722)
  2398  .  .  38: *(obj @ 1739)
  2399  .  .  39: *(obj @ 1755)
  2400  .  .  40: *(obj @ 1793)
  2401  .  .  41: *(obj @ 1885)
  2402  .  .  42: *(obj @ 1993)
  2403  .  .  43: *(obj @ 2075)
  2404  .  .  44: *(obj @ 2107)
  2405  .  .  45: *(obj @ 2137)
  2406  .  .  46: *(obj @ 2156)
  2407  .  .  47: *(obj @ 2173)
  2408  .  .  48: *(obj @ 2187)
  2409  .  .  49: *(obj @ 2225)
  2410  .  .  50: *(obj @ 2322)
  2411  .  }
  2412  .  Comments: []*ast.CommentGroup (len = 1) {
  2413  .  .  0: *(obj @ 10)
  2414  .  }
  2415  .  GoVersion: ""
  2416  }
