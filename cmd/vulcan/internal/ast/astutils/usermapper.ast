     0  *ast.File {
     1  .  Doc: nil
     2  .  Package: 1:1
     3  .  Name: *ast.Ident {
     4  .  .  NamePos: 1:9
     5  .  .  Name: "mapper"
     6  .  .  Obj: nil
     7  .  }
     8  .  Decls: []ast.Decl (len = 11) {
     9  .  .  0: *ast.GenDecl {
    10  .  .  .  Doc: *ast.CommentGroup {
    11  .  .  .  .  List: []*ast.Comment (len = 1) {
    12  .  .  .  .  .  0: *ast.Comment {
    13  .  .  .  .  .  .  Slash: 3:1
    14  .  .  .  .  .  .  Text: "//go:generate ${GOPATH}/bin/vulcan gen db"
    15  .  .  .  .  .  }
    16  .  .  .  .  }
    17  .  .  .  }
    18  .  .  .  TokPos: 4:1
    19  .  .  .  Tok: import
    20  .  .  .  Lparen: 4:8
    21  .  .  .  Specs: []ast.Spec (len = 4) {
    22  .  .  .  .  0: *ast.ImportSpec {
    23  .  .  .  .  .  Doc: nil
    24  .  .  .  .  .  Name: nil
    25  .  .  .  .  .  Path: *ast.BasicLit {
    26  .  .  .  .  .  .  ValuePos: 5:2
    27  .  .  .  .  .  .  Kind: STRING
    28  .  .  .  .  .  .  Value: "\"github.com/jmoiron/sqlx\""
    29  .  .  .  .  .  }
    30  .  .  .  .  .  Comment: nil
    31  .  .  .  .  .  EndPos: -
    32  .  .  .  .  }
    33  .  .  .  .  1: *ast.ImportSpec {
    34  .  .  .  .  .  Doc: nil
    35  .  .  .  .  .  Name: nil
    36  .  .  .  .  .  Path: *ast.BasicLit {
    37  .  .  .  .  .  .  ValuePos: 6:2
    38  .  .  .  .  .  .  Kind: STRING
    39  .  .  .  .  .  .  Value: "\"github.com/mangohow/vulcan\""
    40  .  .  .  .  .  }
    41  .  .  .  .  .  Comment: nil
    42  .  .  .  .  .  EndPos: -
    43  .  .  .  .  }
    44  .  .  .  .  2: *ast.ImportSpec {
    45  .  .  .  .  .  Doc: nil
    46  .  .  .  .  .  Name: *ast.Ident {
    47  .  .  .  .  .  .  NamePos: 7:2
    48  .  .  .  .  .  .  Name: "."
    49  .  .  .  .  .  .  Obj: nil
    50  .  .  .  .  .  }
    51  .  .  .  .  .  Path: *ast.BasicLit {
    52  .  .  .  .  .  .  ValuePos: 7:4
    53  .  .  .  .  .  .  Kind: STRING
    54  .  .  .  .  .  .  Value: "\"github.com/mangohow/vulcan/annotation\""
    55  .  .  .  .  .  }
    56  .  .  .  .  .  Comment: nil
    57  .  .  .  .  .  EndPos: -
    58  .  .  .  .  }
    59  .  .  .  .  3: *ast.ImportSpec {
    60  .  .  .  .  .  Doc: nil
    61  .  .  .  .  .  Name: nil
    62  .  .  .  .  .  Path: *ast.BasicLit {
    63  .  .  .  .  .  .  ValuePos: 8:2
    64  .  .  .  .  .  .  Kind: STRING
    65  .  .  .  .  .  .  Value: "\"github.com/mangohow/vulcan/internal/example/model\""
    66  .  .  .  .  .  }
    67  .  .  .  .  .  Comment: nil
    68  .  .  .  .  .  EndPos: -
    69  .  .  .  .  }
    70  .  .  .  }
    71  .  .  .  Rparen: 9:1
    72  .  .  }
    73  .  .  1: *ast.GenDecl {
    74  .  .  .  Doc: nil
    75  .  .  .  TokPos: 11:1
    76  .  .  .  Tok: type
    77  .  .  .  Lparen: -
    78  .  .  .  Specs: []ast.Spec (len = 1) {
    79  .  .  .  .  0: *ast.TypeSpec {
    80  .  .  .  .  .  Doc: nil
    81  .  .  .  .  .  Name: *ast.Ident {
    82  .  .  .  .  .  .  NamePos: 11:6
    83  .  .  .  .  .  .  Name: "UserMapper"
    84  .  .  .  .  .  .  Obj: *ast.Object {
    85  .  .  .  .  .  .  .  Kind: type
    86  .  .  .  .  .  .  .  Name: "UserMapper"
    87  .  .  .  .  .  .  .  Decl: *(obj @ 79)
    88  .  .  .  .  .  .  .  Data: nil
    89  .  .  .  .  .  .  .  Type: nil
    90  .  .  .  .  .  .  }
    91  .  .  .  .  .  }
    92  .  .  .  .  .  TypeParams: nil
    93  .  .  .  .  .  Assign: -
    94  .  .  .  .  .  Type: *ast.StructType {
    95  .  .  .  .  .  .  Struct: 11:17
    96  .  .  .  .  .  .  Fields: *ast.FieldList {
    97  .  .  .  .  .  .  .  Opening: 11:24
    98  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
    99  .  .  .  .  .  .  .  .  0: *ast.Field {
   100  .  .  .  .  .  .  .  .  .  Doc: nil
   101  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   102  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   103  .  .  .  .  .  .  .  .  .  .  .  NamePos: 12:2
   104  .  .  .  .  .  .  .  .  .  .  .  Name: "db"
   105  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   106  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   107  .  .  .  .  .  .  .  .  .  .  .  .  Name: "db"
   108  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 99)
   109  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   110  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   111  .  .  .  .  .  .  .  .  .  .  .  }
   112  .  .  .  .  .  .  .  .  .  .  }
   113  .  .  .  .  .  .  .  .  .  }
   114  .  .  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   115  .  .  .  .  .  .  .  .  .  .  Star: 12:5
   116  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   117  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   118  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 12:6
   119  .  .  .  .  .  .  .  .  .  .  .  .  Name: "sqlx"
   120  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   121  .  .  .  .  .  .  .  .  .  .  .  }
   122  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   123  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 12:11
   124  .  .  .  .  .  .  .  .  .  .  .  .  Name: "DB"
   125  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   126  .  .  .  .  .  .  .  .  .  .  .  }
   127  .  .  .  .  .  .  .  .  .  .  }
   128  .  .  .  .  .  .  .  .  .  }
   129  .  .  .  .  .  .  .  .  .  Tag: nil
   130  .  .  .  .  .  .  .  .  .  Comment: nil
   131  .  .  .  .  .  .  .  .  }
   132  .  .  .  .  .  .  .  }
   133  .  .  .  .  .  .  .  Closing: 13:1
   134  .  .  .  .  .  .  }
   135  .  .  .  .  .  .  Incomplete: false
   136  .  .  .  .  .  }
   137  .  .  .  .  .  Comment: nil
   138  .  .  .  .  }
   139  .  .  .  }
   140  .  .  .  Rparen: -
   141  .  .  }
   142  .  .  2: *ast.FuncDecl {
   143  .  .  .  Doc: nil
   144  .  .  .  Recv: nil
   145  .  .  .  Name: *ast.Ident {
   146  .  .  .  .  NamePos: 15:6
   147  .  .  .  .  Name: "NewUserMapper"
   148  .  .  .  .  Obj: *ast.Object {
   149  .  .  .  .  .  Kind: func
   150  .  .  .  .  .  Name: "NewUserMapper"
   151  .  .  .  .  .  Decl: *(obj @ 142)
   152  .  .  .  .  .  Data: nil
   153  .  .  .  .  .  Type: nil
   154  .  .  .  .  }
   155  .  .  .  }
   156  .  .  .  Type: *ast.FuncType {
   157  .  .  .  .  Func: 15:1
   158  .  .  .  .  TypeParams: nil
   159  .  .  .  .  Params: *ast.FieldList {
   160  .  .  .  .  .  Opening: 15:19
   161  .  .  .  .  .  List: []*ast.Field (len = 1) {
   162  .  .  .  .  .  .  0: *ast.Field {
   163  .  .  .  .  .  .  .  Doc: nil
   164  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   165  .  .  .  .  .  .  .  .  0: *ast.Ident {
   166  .  .  .  .  .  .  .  .  .  NamePos: 15:20
   167  .  .  .  .  .  .  .  .  .  Name: "db"
   168  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   169  .  .  .  .  .  .  .  .  .  .  Kind: var
   170  .  .  .  .  .  .  .  .  .  .  Name: "db"
   171  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 162)
   172  .  .  .  .  .  .  .  .  .  .  Data: nil
   173  .  .  .  .  .  .  .  .  .  .  Type: nil
   174  .  .  .  .  .  .  .  .  .  }
   175  .  .  .  .  .  .  .  .  }
   176  .  .  .  .  .  .  .  }
   177  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   178  .  .  .  .  .  .  .  .  Star: 15:23
   179  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   180  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   181  .  .  .  .  .  .  .  .  .  .  NamePos: 15:24
   182  .  .  .  .  .  .  .  .  .  .  Name: "sqlx"
   183  .  .  .  .  .  .  .  .  .  .  Obj: nil
   184  .  .  .  .  .  .  .  .  .  }
   185  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   186  .  .  .  .  .  .  .  .  .  .  NamePos: 15:29
   187  .  .  .  .  .  .  .  .  .  .  Name: "DB"
   188  .  .  .  .  .  .  .  .  .  .  Obj: nil
   189  .  .  .  .  .  .  .  .  .  }
   190  .  .  .  .  .  .  .  .  }
   191  .  .  .  .  .  .  .  }
   192  .  .  .  .  .  .  .  Tag: nil
   193  .  .  .  .  .  .  .  Comment: nil
   194  .  .  .  .  .  .  }
   195  .  .  .  .  .  }
   196  .  .  .  .  .  Closing: 15:31
   197  .  .  .  .  }
   198  .  .  .  .  Results: *ast.FieldList {
   199  .  .  .  .  .  Opening: -
   200  .  .  .  .  .  List: []*ast.Field (len = 1) {
   201  .  .  .  .  .  .  0: *ast.Field {
   202  .  .  .  .  .  .  .  Doc: nil
   203  .  .  .  .  .  .  .  Names: nil
   204  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   205  .  .  .  .  .  .  .  .  Star: 15:33
   206  .  .  .  .  .  .  .  .  X: *ast.Ident {
   207  .  .  .  .  .  .  .  .  .  NamePos: 15:34
   208  .  .  .  .  .  .  .  .  .  Name: "UserMapper"
   209  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 84)
   210  .  .  .  .  .  .  .  .  }
   211  .  .  .  .  .  .  .  }
   212  .  .  .  .  .  .  .  Tag: nil
   213  .  .  .  .  .  .  .  Comment: nil
   214  .  .  .  .  .  .  }
   215  .  .  .  .  .  }
   216  .  .  .  .  .  Closing: -
   217  .  .  .  .  }
   218  .  .  .  }
   219  .  .  .  Body: *ast.BlockStmt {
   220  .  .  .  .  Lbrace: 15:45
   221  .  .  .  .  List: []ast.Stmt (len = 1) {
   222  .  .  .  .  .  0: *ast.ReturnStmt {
   223  .  .  .  .  .  .  Return: 16:2
   224  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   225  .  .  .  .  .  .  .  0: *ast.UnaryExpr {
   226  .  .  .  .  .  .  .  .  OpPos: 16:9
   227  .  .  .  .  .  .  .  .  Op: &
   228  .  .  .  .  .  .  .  .  X: *ast.CompositeLit {
   229  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   230  .  .  .  .  .  .  .  .  .  .  NamePos: 16:10
   231  .  .  .  .  .  .  .  .  .  .  Name: "UserMapper"
   232  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 84)
   233  .  .  .  .  .  .  .  .  .  }
   234  .  .  .  .  .  .  .  .  .  Lbrace: 16:20
   235  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 1) {
   236  .  .  .  .  .  .  .  .  .  .  0: *ast.KeyValueExpr {
   237  .  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
   238  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 17:3
   239  .  .  .  .  .  .  .  .  .  .  .  .  Name: "db"
   240  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 168)
   241  .  .  .  .  .  .  .  .  .  .  .  }
   242  .  .  .  .  .  .  .  .  .  .  .  Colon: 17:5
   243  .  .  .  .  .  .  .  .  .  .  .  Value: *ast.Ident {
   244  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 17:7
   245  .  .  .  .  .  .  .  .  .  .  .  .  Name: "db"
   246  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 168)
   247  .  .  .  .  .  .  .  .  .  .  .  }
   248  .  .  .  .  .  .  .  .  .  .  }
   249  .  .  .  .  .  .  .  .  .  }
   250  .  .  .  .  .  .  .  .  .  Rbrace: 18:2
   251  .  .  .  .  .  .  .  .  .  Incomplete: false
   252  .  .  .  .  .  .  .  .  }
   253  .  .  .  .  .  .  .  }
   254  .  .  .  .  .  .  }
   255  .  .  .  .  .  }
   256  .  .  .  .  }
   257  .  .  .  .  Rbrace: 19:1
   258  .  .  .  }
   259  .  .  }
   260  .  .  3: *ast.FuncDecl {
   261  .  .  .  Doc: nil
   262  .  .  .  Recv: *ast.FieldList {
   263  .  .  .  .  Opening: 21:6
   264  .  .  .  .  List: []*ast.Field (len = 1) {
   265  .  .  .  .  .  0: *ast.Field {
   266  .  .  .  .  .  .  Doc: nil
   267  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   268  .  .  .  .  .  .  .  0: *ast.Ident {
   269  .  .  .  .  .  .  .  .  NamePos: 21:7
   270  .  .  .  .  .  .  .  .  Name: "m"
   271  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   272  .  .  .  .  .  .  .  .  .  Kind: var
   273  .  .  .  .  .  .  .  .  .  Name: "m"
   274  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 265)
   275  .  .  .  .  .  .  .  .  .  Data: nil
   276  .  .  .  .  .  .  .  .  .  Type: nil
   277  .  .  .  .  .  .  .  .  }
   278  .  .  .  .  .  .  .  }
   279  .  .  .  .  .  .  }
   280  .  .  .  .  .  .  Type: *ast.StarExpr {
   281  .  .  .  .  .  .  .  Star: 21:9
   282  .  .  .  .  .  .  .  X: *ast.Ident {
   283  .  .  .  .  .  .  .  .  NamePos: 21:10
   284  .  .  .  .  .  .  .  .  Name: "UserMapper"
   285  .  .  .  .  .  .  .  .  Obj: *(obj @ 84)
   286  .  .  .  .  .  .  .  }
   287  .  .  .  .  .  .  }
   288  .  .  .  .  .  .  Tag: nil
   289  .  .  .  .  .  .  Comment: nil
   290  .  .  .  .  .  }
   291  .  .  .  .  }
   292  .  .  .  .  Closing: 21:20
   293  .  .  .  }
   294  .  .  .  Name: *ast.Ident {
   295  .  .  .  .  NamePos: 21:22
   296  .  .  .  .  Name: "Add"
   297  .  .  .  .  Obj: nil
   298  .  .  .  }
   299  .  .  .  Type: *ast.FuncType {
   300  .  .  .  .  Func: 21:1
   301  .  .  .  .  TypeParams: nil
   302  .  .  .  .  Params: *ast.FieldList {
   303  .  .  .  .  .  Opening: 21:25
   304  .  .  .  .  .  List: []*ast.Field (len = 1) {
   305  .  .  .  .  .  .  0: *ast.Field {
   306  .  .  .  .  .  .  .  Doc: nil
   307  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   308  .  .  .  .  .  .  .  .  0: *ast.Ident {
   309  .  .  .  .  .  .  .  .  .  NamePos: 21:26
   310  .  .  .  .  .  .  .  .  .  Name: "user"
   311  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   312  .  .  .  .  .  .  .  .  .  .  Kind: var
   313  .  .  .  .  .  .  .  .  .  .  Name: "user"
   314  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 305)
   315  .  .  .  .  .  .  .  .  .  .  Data: nil
   316  .  .  .  .  .  .  .  .  .  .  Type: nil
   317  .  .  .  .  .  .  .  .  .  }
   318  .  .  .  .  .  .  .  .  }
   319  .  .  .  .  .  .  .  }
   320  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   321  .  .  .  .  .  .  .  .  Star: 21:31
   322  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   323  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   324  .  .  .  .  .  .  .  .  .  .  NamePos: 21:32
   325  .  .  .  .  .  .  .  .  .  .  Name: "model"
   326  .  .  .  .  .  .  .  .  .  .  Obj: nil
   327  .  .  .  .  .  .  .  .  .  }
   328  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   329  .  .  .  .  .  .  .  .  .  .  NamePos: 21:38
   330  .  .  .  .  .  .  .  .  .  .  Name: "User"
   331  .  .  .  .  .  .  .  .  .  .  Obj: nil
   332  .  .  .  .  .  .  .  .  .  }
   333  .  .  .  .  .  .  .  .  }
   334  .  .  .  .  .  .  .  }
   335  .  .  .  .  .  .  .  Tag: nil
   336  .  .  .  .  .  .  .  Comment: nil
   337  .  .  .  .  .  .  }
   338  .  .  .  .  .  }
   339  .  .  .  .  .  Closing: 21:42
   340  .  .  .  .  }
   341  .  .  .  .  Results: nil
   342  .  .  .  }
   343  .  .  .  Body: *ast.BlockStmt {
   344  .  .  .  .  Lbrace: 21:44
   345  .  .  .  .  List: []ast.Stmt (len = 1) {
   346  .  .  .  .  .  0: *ast.ExprStmt {
   347  .  .  .  .  .  .  X: *ast.CallExpr {
   348  .  .  .  .  .  .  .  Fun: *ast.Ident {
   349  .  .  .  .  .  .  .  .  NamePos: 22:2
   350  .  .  .  .  .  .  .  .  Name: "Insert"
   351  .  .  .  .  .  .  .  .  Obj: nil
   352  .  .  .  .  .  .  .  }
   353  .  .  .  .  .  .  .  Lparen: 22:8
   354  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   355  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   356  .  .  .  .  .  .  .  .  .  ValuePos: 22:9
   357  .  .  .  .  .  .  .  .  .  Kind: STRING
   358  .  .  .  .  .  .  .  .  .  Value: "`INSERT INTO t_user (id, username, password, create_at, email, address) \n            VALUES (#{user.Id}, #{user.Username}, #{user.Password}, #{user.Create_at}, #{user.Email}, #{user.Address})`"
   359  .  .  .  .  .  .  .  .  }
   360  .  .  .  .  .  .  .  }
   361  .  .  .  .  .  .  .  Ellipsis: -
   362  .  .  .  .  .  .  .  Rparen: 23:120
   363  .  .  .  .  .  .  }
   364  .  .  .  .  .  }
   365  .  .  .  .  }
   366  .  .  .  .  Rbrace: 24:1
   367  .  .  .  }
   368  .  .  }
   369  .  .  4: *ast.FuncDecl {
   370  .  .  .  Doc: nil
   371  .  .  .  Recv: *ast.FieldList {
   372  .  .  .  .  Opening: 26:6
   373  .  .  .  .  List: []*ast.Field (len = 1) {
   374  .  .  .  .  .  0: *ast.Field {
   375  .  .  .  .  .  .  Doc: nil
   376  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   377  .  .  .  .  .  .  .  0: *ast.Ident {
   378  .  .  .  .  .  .  .  .  NamePos: 26:7
   379  .  .  .  .  .  .  .  .  Name: "m"
   380  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   381  .  .  .  .  .  .  .  .  .  Kind: var
   382  .  .  .  .  .  .  .  .  .  Name: "m"
   383  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 374)
   384  .  .  .  .  .  .  .  .  .  Data: nil
   385  .  .  .  .  .  .  .  .  .  Type: nil
   386  .  .  .  .  .  .  .  .  }
   387  .  .  .  .  .  .  .  }
   388  .  .  .  .  .  .  }
   389  .  .  .  .  .  .  Type: *ast.StarExpr {
   390  .  .  .  .  .  .  .  Star: 26:9
   391  .  .  .  .  .  .  .  X: *ast.Ident {
   392  .  .  .  .  .  .  .  .  NamePos: 26:10
   393  .  .  .  .  .  .  .  .  Name: "UserMapper"
   394  .  .  .  .  .  .  .  .  Obj: *(obj @ 84)
   395  .  .  .  .  .  .  .  }
   396  .  .  .  .  .  .  }
   397  .  .  .  .  .  .  Tag: nil
   398  .  .  .  .  .  .  Comment: nil
   399  .  .  .  .  .  }
   400  .  .  .  .  }
   401  .  .  .  .  Closing: 26:20
   402  .  .  .  }
   403  .  .  .  Name: *ast.Ident {
   404  .  .  .  .  NamePos: 26:22
   405  .  .  .  .  Name: "DeleteById"
   406  .  .  .  .  Obj: nil
   407  .  .  .  }
   408  .  .  .  Type: *ast.FuncType {
   409  .  .  .  .  Func: 26:1
   410  .  .  .  .  TypeParams: nil
   411  .  .  .  .  Params: *ast.FieldList {
   412  .  .  .  .  .  Opening: 26:32
   413  .  .  .  .  .  List: []*ast.Field (len = 1) {
   414  .  .  .  .  .  .  0: *ast.Field {
   415  .  .  .  .  .  .  .  Doc: nil
   416  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   417  .  .  .  .  .  .  .  .  0: *ast.Ident {
   418  .  .  .  .  .  .  .  .  .  NamePos: 26:33
   419  .  .  .  .  .  .  .  .  .  Name: "id"
   420  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   421  .  .  .  .  .  .  .  .  .  .  Kind: var
   422  .  .  .  .  .  .  .  .  .  .  Name: "id"
   423  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 414)
   424  .  .  .  .  .  .  .  .  .  .  Data: nil
   425  .  .  .  .  .  .  .  .  .  .  Type: nil
   426  .  .  .  .  .  .  .  .  .  }
   427  .  .  .  .  .  .  .  .  }
   428  .  .  .  .  .  .  .  }
   429  .  .  .  .  .  .  .  Type: *ast.Ident {
   430  .  .  .  .  .  .  .  .  NamePos: 26:36
   431  .  .  .  .  .  .  .  .  Name: "int"
   432  .  .  .  .  .  .  .  .  Obj: nil
   433  .  .  .  .  .  .  .  }
   434  .  .  .  .  .  .  .  Tag: nil
   435  .  .  .  .  .  .  .  Comment: nil
   436  .  .  .  .  .  .  }
   437  .  .  .  .  .  }
   438  .  .  .  .  .  Closing: 26:39
   439  .  .  .  .  }
   440  .  .  .  .  Results: *ast.FieldList {
   441  .  .  .  .  .  Opening: -
   442  .  .  .  .  .  List: []*ast.Field (len = 1) {
   443  .  .  .  .  .  .  0: *ast.Field {
   444  .  .  .  .  .  .  .  Doc: nil
   445  .  .  .  .  .  .  .  Names: nil
   446  .  .  .  .  .  .  .  Type: *ast.Ident {
   447  .  .  .  .  .  .  .  .  NamePos: 26:41
   448  .  .  .  .  .  .  .  .  Name: "int"
   449  .  .  .  .  .  .  .  .  Obj: nil
   450  .  .  .  .  .  .  .  }
   451  .  .  .  .  .  .  .  Tag: nil
   452  .  .  .  .  .  .  .  Comment: nil
   453  .  .  .  .  .  .  }
   454  .  .  .  .  .  }
   455  .  .  .  .  .  Closing: -
   456  .  .  .  .  }
   457  .  .  .  }
   458  .  .  .  Body: *ast.BlockStmt {
   459  .  .  .  .  Lbrace: 26:45
   460  .  .  .  .  List: []ast.Stmt (len = 2) {
   461  .  .  .  .  .  0: *ast.ExprStmt {
   462  .  .  .  .  .  .  X: *ast.CallExpr {
   463  .  .  .  .  .  .  .  Fun: *ast.Ident {
   464  .  .  .  .  .  .  .  .  NamePos: 27:2
   465  .  .  .  .  .  .  .  .  Name: "Delete"
   466  .  .  .  .  .  .  .  .  Obj: nil
   467  .  .  .  .  .  .  .  }
   468  .  .  .  .  .  .  .  Lparen: 27:8
   469  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   470  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   471  .  .  .  .  .  .  .  .  .  ValuePos: 27:9
   472  .  .  .  .  .  .  .  .  .  Kind: STRING
   473  .  .  .  .  .  .  .  .  .  Value: "\"DELETE FROM t_user WHERE id = #{id}\""
   474  .  .  .  .  .  .  .  .  }
   475  .  .  .  .  .  .  .  }
   476  .  .  .  .  .  .  .  Ellipsis: -
   477  .  .  .  .  .  .  .  Rparen: 27:46
   478  .  .  .  .  .  .  }
   479  .  .  .  .  .  }
   480  .  .  .  .  .  1: *ast.ReturnStmt {
   481  .  .  .  .  .  .  Return: 28:2
   482  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   483  .  .  .  .  .  .  .  0: *ast.BasicLit {
   484  .  .  .  .  .  .  .  .  ValuePos: 28:9
   485  .  .  .  .  .  .  .  .  Kind: INT
   486  .  .  .  .  .  .  .  .  Value: "0"
   487  .  .  .  .  .  .  .  }
   488  .  .  .  .  .  .  }
   489  .  .  .  .  .  }
   490  .  .  .  .  }
   491  .  .  .  .  Rbrace: 29:1
   492  .  .  .  }
   493  .  .  }
   494  .  .  5: *ast.FuncDecl {
   495  .  .  .  Doc: nil
   496  .  .  .  Recv: *ast.FieldList {
   497  .  .  .  .  Opening: 31:6
   498  .  .  .  .  List: []*ast.Field (len = 1) {
   499  .  .  .  .  .  0: *ast.Field {
   500  .  .  .  .  .  .  Doc: nil
   501  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   502  .  .  .  .  .  .  .  0: *ast.Ident {
   503  .  .  .  .  .  .  .  .  NamePos: 31:7
   504  .  .  .  .  .  .  .  .  Name: "m"
   505  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   506  .  .  .  .  .  .  .  .  .  Kind: var
   507  .  .  .  .  .  .  .  .  .  Name: "m"
   508  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 499)
   509  .  .  .  .  .  .  .  .  .  Data: nil
   510  .  .  .  .  .  .  .  .  .  Type: nil
   511  .  .  .  .  .  .  .  .  }
   512  .  .  .  .  .  .  .  }
   513  .  .  .  .  .  .  }
   514  .  .  .  .  .  .  Type: *ast.StarExpr {
   515  .  .  .  .  .  .  .  Star: 31:9
   516  .  .  .  .  .  .  .  X: *ast.Ident {
   517  .  .  .  .  .  .  .  .  NamePos: 31:10
   518  .  .  .  .  .  .  .  .  Name: "UserMapper"
   519  .  .  .  .  .  .  .  .  Obj: *(obj @ 84)
   520  .  .  .  .  .  .  .  }
   521  .  .  .  .  .  .  }
   522  .  .  .  .  .  .  Tag: nil
   523  .  .  .  .  .  .  Comment: nil
   524  .  .  .  .  .  }
   525  .  .  .  .  }
   526  .  .  .  .  Closing: 31:20
   527  .  .  .  }
   528  .  .  .  Name: *ast.Ident {
   529  .  .  .  .  NamePos: 31:22
   530  .  .  .  .  Name: "UpdateById"
   531  .  .  .  .  Obj: nil
   532  .  .  .  }
   533  .  .  .  Type: *ast.FuncType {
   534  .  .  .  .  Func: 31:1
   535  .  .  .  .  TypeParams: nil
   536  .  .  .  .  Params: *ast.FieldList {
   537  .  .  .  .  .  Opening: 31:32
   538  .  .  .  .  .  List: []*ast.Field (len = 1) {
   539  .  .  .  .  .  .  0: *ast.Field {
   540  .  .  .  .  .  .  .  Doc: nil
   541  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   542  .  .  .  .  .  .  .  .  0: *ast.Ident {
   543  .  .  .  .  .  .  .  .  .  NamePos: 31:33
   544  .  .  .  .  .  .  .  .  .  Name: "user"
   545  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   546  .  .  .  .  .  .  .  .  .  .  Kind: var
   547  .  .  .  .  .  .  .  .  .  .  Name: "user"
   548  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 539)
   549  .  .  .  .  .  .  .  .  .  .  Data: nil
   550  .  .  .  .  .  .  .  .  .  .  Type: nil
   551  .  .  .  .  .  .  .  .  .  }
   552  .  .  .  .  .  .  .  .  }
   553  .  .  .  .  .  .  .  }
   554  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   555  .  .  .  .  .  .  .  .  Star: 31:38
   556  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   557  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   558  .  .  .  .  .  .  .  .  .  .  NamePos: 31:39
   559  .  .  .  .  .  .  .  .  .  .  Name: "model"
   560  .  .  .  .  .  .  .  .  .  .  Obj: nil
   561  .  .  .  .  .  .  .  .  .  }
   562  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   563  .  .  .  .  .  .  .  .  .  .  NamePos: 31:45
   564  .  .  .  .  .  .  .  .  .  .  Name: "User"
   565  .  .  .  .  .  .  .  .  .  .  Obj: nil
   566  .  .  .  .  .  .  .  .  .  }
   567  .  .  .  .  .  .  .  .  }
   568  .  .  .  .  .  .  .  }
   569  .  .  .  .  .  .  .  Tag: nil
   570  .  .  .  .  .  .  .  Comment: nil
   571  .  .  .  .  .  .  }
   572  .  .  .  .  .  }
   573  .  .  .  .  .  Closing: 31:49
   574  .  .  .  .  }
   575  .  .  .  .  Results: *ast.FieldList {
   576  .  .  .  .  .  Opening: -
   577  .  .  .  .  .  List: []*ast.Field (len = 1) {
   578  .  .  .  .  .  .  0: *ast.Field {
   579  .  .  .  .  .  .  .  Doc: nil
   580  .  .  .  .  .  .  .  Names: nil
   581  .  .  .  .  .  .  .  Type: *ast.Ident {
   582  .  .  .  .  .  .  .  .  NamePos: 31:51
   583  .  .  .  .  .  .  .  .  Name: "int"
   584  .  .  .  .  .  .  .  .  Obj: nil
   585  .  .  .  .  .  .  .  }
   586  .  .  .  .  .  .  .  Tag: nil
   587  .  .  .  .  .  .  .  Comment: nil
   588  .  .  .  .  .  .  }
   589  .  .  .  .  .  }
   590  .  .  .  .  .  Closing: -
   591  .  .  .  .  }
   592  .  .  .  }
   593  .  .  .  Body: *ast.BlockStmt {
   594  .  .  .  .  Lbrace: 31:55
   595  .  .  .  .  List: []ast.Stmt (len = 3) {
   596  .  .  .  .  .  0: *ast.AssignStmt {
   597  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   598  .  .  .  .  .  .  .  0: *ast.Ident {
   599  .  .  .  .  .  .  .  .  NamePos: 32:2
   600  .  .  .  .  .  .  .  .  Name: "a"
   601  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   602  .  .  .  .  .  .  .  .  .  Kind: var
   603  .  .  .  .  .  .  .  .  .  Name: "a"
   604  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 596)
   605  .  .  .  .  .  .  .  .  .  Data: nil
   606  .  .  .  .  .  .  .  .  .  Type: nil
   607  .  .  .  .  .  .  .  .  }
   608  .  .  .  .  .  .  .  }
   609  .  .  .  .  .  .  }
   610  .  .  .  .  .  .  TokPos: 32:4
   611  .  .  .  .  .  .  Tok: :=
   612  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   613  .  .  .  .  .  .  .  0: *ast.Ident {
   614  .  .  .  .  .  .  .  .  NamePos: 32:7
   615  .  .  .  .  .  .  .  .  Name: "true"
   616  .  .  .  .  .  .  .  .  Obj: nil
   617  .  .  .  .  .  .  .  }
   618  .  .  .  .  .  .  }
   619  .  .  .  .  .  }
   620  .  .  .  .  .  1: *ast.ExprStmt {
   621  .  .  .  .  .  .  X: *ast.CallExpr {
   622  .  .  .  .  .  .  .  Fun: *ast.Ident {
   623  .  .  .  .  .  .  .  .  NamePos: 33:2
   624  .  .  .  .  .  .  .  .  Name: "Update"
   625  .  .  .  .  .  .  .  .  Obj: nil
   626  .  .  .  .  .  .  .  }
   627  .  .  .  .  .  .  .  Lparen: 33:8
   628  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   629  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
   630  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   631  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   632  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   633  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   634  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   635  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   636  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   637  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   638  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   639  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 33:9
   640  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "SQL"
   641  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   642  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   643  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 33:12
   644  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: nil
   645  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   646  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 33:13
   647  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   648  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   649  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 33:15
   650  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Stmt"
   651  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   652  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   653  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   654  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 33:19
   655  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   656  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   657  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 33:20
   658  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   659  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"UPDATE t_user\""
   660  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   661  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   662  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   663  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 33:35
   664  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   665  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   666  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 34:3
   667  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Set"
   668  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   669  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   670  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   671  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 34:6
   672  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   673  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
   674  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   675  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   676  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   677  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
   678  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   679  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 34:7
   680  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "If"
   681  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   682  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   683  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 34:9
   684  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   685  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   686  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   687  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   688  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 34:10
   689  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "user"
   690  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 545)
   691  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   692  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   693  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 34:15
   694  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Password"
   695  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   696  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   697  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   698  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: 34:24
   699  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !=
   700  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   701  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 34:27
   702  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   703  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\""
   704  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   705  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   706  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
   707  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 34:31
   708  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   709  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"password = #{user.Password}\""
   710  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   711  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   712  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   713  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 34:60
   714  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   715  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   716  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 35:4
   717  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "If"
   718  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   719  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   720  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   721  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 35:6
   722  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   723  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   724  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   725  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   726  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 35:7
   727  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "user"
   728  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 545)
   729  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   730  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   731  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 35:12
   732  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Email"
   733  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   734  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   735  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   736  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: 35:18
   737  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !=
   738  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   739  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 35:21
   740  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   741  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\""
   742  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   743  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   744  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
   745  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 35:25
   746  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   747  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"email = #{user.Email}\""
   748  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   749  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   750  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   751  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 35:48
   752  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   753  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   754  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 36:4
   755  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "If"
   756  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   757  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   758  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   759  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 36:6
   760  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   761  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   762  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BinaryExpr {
   763  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   764  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   765  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 36:7
   766  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "user"
   767  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 545)
   768  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   769  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   770  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 36:12
   771  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Address"
   772  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   773  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   774  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   775  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: 36:20
   776  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !=
   777  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   778  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 36:23
   779  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   780  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\""
   781  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   782  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   783  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: 36:26
   784  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: &&
   785  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.ParenExpr {
   786  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 36:29
   787  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BinaryExpr {
   788  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.BinaryExpr {
   789  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   790  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   791  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 36:30
   792  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "user"
   793  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 545)
   794  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   795  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   796  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 36:35
   797  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Id"
   798  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   799  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   800  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   801  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: 36:38
   802  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: >
   803  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
   804  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 36:40
   805  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT
   806  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "0"
   807  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   808  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   809  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: 36:42
   810  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: ||
   811  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
   812  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 36:45
   813  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "a"
   814  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 601)
   815  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   816  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   817  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 36:46
   818  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   819  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   820  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
   821  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 36:49
   822  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   823  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"address = #{user.Address}\""
   824  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   825  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   826  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   827  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 36:76
   828  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   829  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   830  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   831  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 36:77
   832  .  .  .  .  .  .  .  .  .  .  .  .  }
   833  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   834  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 37:3
   835  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Stmt"
   836  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   837  .  .  .  .  .  .  .  .  .  .  .  .  }
   838  .  .  .  .  .  .  .  .  .  .  .  }
   839  .  .  .  .  .  .  .  .  .  .  .  Lparen: 37:7
   840  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   841  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   842  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 37:8
   843  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   844  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"WHERE id = #{user.Id}\""
   845  .  .  .  .  .  .  .  .  .  .  .  .  }
   846  .  .  .  .  .  .  .  .  .  .  .  }
   847  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   848  .  .  .  .  .  .  .  .  .  .  .  Rparen: 37:31
   849  .  .  .  .  .  .  .  .  .  .  }
   850  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   851  .  .  .  .  .  .  .  .  .  .  .  NamePos: 37:33
   852  .  .  .  .  .  .  .  .  .  .  .  Name: "Build"
   853  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   854  .  .  .  .  .  .  .  .  .  .  }
   855  .  .  .  .  .  .  .  .  .  }
   856  .  .  .  .  .  .  .  .  .  Lparen: 37:38
   857  .  .  .  .  .  .  .  .  .  Args: nil
   858  .  .  .  .  .  .  .  .  .  Ellipsis: -
   859  .  .  .  .  .  .  .  .  .  Rparen: 37:39
   860  .  .  .  .  .  .  .  .  }
   861  .  .  .  .  .  .  .  }
   862  .  .  .  .  .  .  .  Ellipsis: -
   863  .  .  .  .  .  .  .  Rparen: 37:40
   864  .  .  .  .  .  .  }
   865  .  .  .  .  .  }
   866  .  .  .  .  .  2: *ast.ReturnStmt {
   867  .  .  .  .  .  .  Return: 38:2
   868  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   869  .  .  .  .  .  .  .  0: *ast.BasicLit {
   870  .  .  .  .  .  .  .  .  ValuePos: 38:9
   871  .  .  .  .  .  .  .  .  Kind: INT
   872  .  .  .  .  .  .  .  .  Value: "0"
   873  .  .  .  .  .  .  .  }
   874  .  .  .  .  .  .  }
   875  .  .  .  .  .  }
   876  .  .  .  .  }
   877  .  .  .  .  Rbrace: 39:1
   878  .  .  .  }
   879  .  .  }
   880  .  .  6: *ast.FuncDecl {
   881  .  .  .  Doc: nil
   882  .  .  .  Recv: *ast.FieldList {
   883  .  .  .  .  Opening: 41:6
   884  .  .  .  .  List: []*ast.Field (len = 1) {
   885  .  .  .  .  .  0: *ast.Field {
   886  .  .  .  .  .  .  Doc: nil
   887  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   888  .  .  .  .  .  .  .  0: *ast.Ident {
   889  .  .  .  .  .  .  .  .  NamePos: 41:7
   890  .  .  .  .  .  .  .  .  Name: "m"
   891  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   892  .  .  .  .  .  .  .  .  .  Kind: var
   893  .  .  .  .  .  .  .  .  .  Name: "m"
   894  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 885)
   895  .  .  .  .  .  .  .  .  .  Data: nil
   896  .  .  .  .  .  .  .  .  .  Type: nil
   897  .  .  .  .  .  .  .  .  }
   898  .  .  .  .  .  .  .  }
   899  .  .  .  .  .  .  }
   900  .  .  .  .  .  .  Type: *ast.StarExpr {
   901  .  .  .  .  .  .  .  Star: 41:9
   902  .  .  .  .  .  .  .  X: *ast.Ident {
   903  .  .  .  .  .  .  .  .  NamePos: 41:10
   904  .  .  .  .  .  .  .  .  Name: "UserMapper"
   905  .  .  .  .  .  .  .  .  Obj: *(obj @ 84)
   906  .  .  .  .  .  .  .  }
   907  .  .  .  .  .  .  }
   908  .  .  .  .  .  .  Tag: nil
   909  .  .  .  .  .  .  Comment: nil
   910  .  .  .  .  .  }
   911  .  .  .  .  }
   912  .  .  .  .  Closing: 41:20
   913  .  .  .  }
   914  .  .  .  Name: *ast.Ident {
   915  .  .  .  .  NamePos: 41:22
   916  .  .  .  .  Name: "FindById"
   917  .  .  .  .  Obj: nil
   918  .  .  .  }
   919  .  .  .  Type: *ast.FuncType {
   920  .  .  .  .  Func: 41:1
   921  .  .  .  .  TypeParams: nil
   922  .  .  .  .  Params: *ast.FieldList {
   923  .  .  .  .  .  Opening: 41:30
   924  .  .  .  .  .  List: []*ast.Field (len = 1) {
   925  .  .  .  .  .  .  0: *ast.Field {
   926  .  .  .  .  .  .  .  Doc: nil
   927  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   928  .  .  .  .  .  .  .  .  0: *ast.Ident {
   929  .  .  .  .  .  .  .  .  .  NamePos: 41:31
   930  .  .  .  .  .  .  .  .  .  Name: "id"
   931  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   932  .  .  .  .  .  .  .  .  .  .  Kind: var
   933  .  .  .  .  .  .  .  .  .  .  Name: "id"
   934  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 925)
   935  .  .  .  .  .  .  .  .  .  .  Data: nil
   936  .  .  .  .  .  .  .  .  .  .  Type: nil
   937  .  .  .  .  .  .  .  .  .  }
   938  .  .  .  .  .  .  .  .  }
   939  .  .  .  .  .  .  .  }
   940  .  .  .  .  .  .  .  Type: *ast.Ident {
   941  .  .  .  .  .  .  .  .  NamePos: 41:34
   942  .  .  .  .  .  .  .  .  Name: "int"
   943  .  .  .  .  .  .  .  .  Obj: nil
   944  .  .  .  .  .  .  .  }
   945  .  .  .  .  .  .  .  Tag: nil
   946  .  .  .  .  .  .  .  Comment: nil
   947  .  .  .  .  .  .  }
   948  .  .  .  .  .  }
   949  .  .  .  .  .  Closing: 41:37
   950  .  .  .  .  }
   951  .  .  .  .  Results: *ast.FieldList {
   952  .  .  .  .  .  Opening: -
   953  .  .  .  .  .  List: []*ast.Field (len = 1) {
   954  .  .  .  .  .  .  0: *ast.Field {
   955  .  .  .  .  .  .  .  Doc: nil
   956  .  .  .  .  .  .  .  Names: nil
   957  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   958  .  .  .  .  .  .  .  .  Star: 41:39
   959  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   960  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   961  .  .  .  .  .  .  .  .  .  .  NamePos: 41:40
   962  .  .  .  .  .  .  .  .  .  .  Name: "model"
   963  .  .  .  .  .  .  .  .  .  .  Obj: nil
   964  .  .  .  .  .  .  .  .  .  }
   965  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   966  .  .  .  .  .  .  .  .  .  .  NamePos: 41:46
   967  .  .  .  .  .  .  .  .  .  .  Name: "User"
   968  .  .  .  .  .  .  .  .  .  .  Obj: nil
   969  .  .  .  .  .  .  .  .  .  }
   970  .  .  .  .  .  .  .  .  }
   971  .  .  .  .  .  .  .  }
   972  .  .  .  .  .  .  .  Tag: nil
   973  .  .  .  .  .  .  .  Comment: nil
   974  .  .  .  .  .  .  }
   975  .  .  .  .  .  }
   976  .  .  .  .  .  Closing: -
   977  .  .  .  .  }
   978  .  .  .  }
   979  .  .  .  Body: *ast.BlockStmt {
   980  .  .  .  .  Lbrace: 41:51
   981  .  .  .  .  List: []ast.Stmt (len = 2) {
   982  .  .  .  .  .  0: *ast.ExprStmt {
   983  .  .  .  .  .  .  X: *ast.CallExpr {
   984  .  .  .  .  .  .  .  Fun: *ast.Ident {
   985  .  .  .  .  .  .  .  .  NamePos: 42:2
   986  .  .  .  .  .  .  .  .  Name: "Select"
   987  .  .  .  .  .  .  .  .  Obj: nil
   988  .  .  .  .  .  .  .  }
   989  .  .  .  .  .  .  .  Lparen: 42:8
   990  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   991  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
   992  .  .  .  .  .  .  .  .  .  ValuePos: 42:9
   993  .  .  .  .  .  .  .  .  .  Kind: STRING
   994  .  .  .  .  .  .  .  .  .  Value: "\"SELECT * FROM t_user WHERE id = #{id}\""
   995  .  .  .  .  .  .  .  .  }
   996  .  .  .  .  .  .  .  }
   997  .  .  .  .  .  .  .  Ellipsis: -
   998  .  .  .  .  .  .  .  Rparen: 42:48
   999  .  .  .  .  .  .  }
  1000  .  .  .  .  .  }
  1001  .  .  .  .  .  1: *ast.ReturnStmt {
  1002  .  .  .  .  .  .  Return: 43:2
  1003  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  1004  .  .  .  .  .  .  .  0: *ast.Ident {
  1005  .  .  .  .  .  .  .  .  NamePos: 43:9
  1006  .  .  .  .  .  .  .  .  Name: "nil"
  1007  .  .  .  .  .  .  .  .  Obj: nil
  1008  .  .  .  .  .  .  .  }
  1009  .  .  .  .  .  .  }
  1010  .  .  .  .  .  }
  1011  .  .  .  .  }
  1012  .  .  .  .  Rbrace: 44:1
  1013  .  .  .  }
  1014  .  .  }
  1015  .  .  7: *ast.FuncDecl {
  1016  .  .  .  Doc: nil
  1017  .  .  .  Recv: *ast.FieldList {
  1018  .  .  .  .  Opening: 46:6
  1019  .  .  .  .  List: []*ast.Field (len = 1) {
  1020  .  .  .  .  .  0: *ast.Field {
  1021  .  .  .  .  .  .  Doc: nil
  1022  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1023  .  .  .  .  .  .  .  0: *ast.Ident {
  1024  .  .  .  .  .  .  .  .  NamePos: 46:7
  1025  .  .  .  .  .  .  .  .  Name: "m"
  1026  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1027  .  .  .  .  .  .  .  .  .  Kind: var
  1028  .  .  .  .  .  .  .  .  .  Name: "m"
  1029  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1020)
  1030  .  .  .  .  .  .  .  .  .  Data: nil
  1031  .  .  .  .  .  .  .  .  .  Type: nil
  1032  .  .  .  .  .  .  .  .  }
  1033  .  .  .  .  .  .  .  }
  1034  .  .  .  .  .  .  }
  1035  .  .  .  .  .  .  Type: *ast.StarExpr {
  1036  .  .  .  .  .  .  .  Star: 46:9
  1037  .  .  .  .  .  .  .  X: *ast.Ident {
  1038  .  .  .  .  .  .  .  .  NamePos: 46:10
  1039  .  .  .  .  .  .  .  .  Name: "UserMapper"
  1040  .  .  .  .  .  .  .  .  Obj: *(obj @ 84)
  1041  .  .  .  .  .  .  .  }
  1042  .  .  .  .  .  .  }
  1043  .  .  .  .  .  .  Tag: nil
  1044  .  .  .  .  .  .  Comment: nil
  1045  .  .  .  .  .  }
  1046  .  .  .  .  }
  1047  .  .  .  .  Closing: 46:20
  1048  .  .  .  }
  1049  .  .  .  Name: *ast.Ident {
  1050  .  .  .  .  NamePos: 46:22
  1051  .  .  .  .  Name: "Find"
  1052  .  .  .  .  Obj: nil
  1053  .  .  .  }
  1054  .  .  .  Type: *ast.FuncType {
  1055  .  .  .  .  Func: 46:1
  1056  .  .  .  .  TypeParams: nil
  1057  .  .  .  .  Params: *ast.FieldList {
  1058  .  .  .  .  .  Opening: 46:26
  1059  .  .  .  .  .  List: []*ast.Field (len = 1) {
  1060  .  .  .  .  .  .  0: *ast.Field {
  1061  .  .  .  .  .  .  .  Doc: nil
  1062  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1063  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1064  .  .  .  .  .  .  .  .  .  NamePos: 46:27
  1065  .  .  .  .  .  .  .  .  .  Name: "user"
  1066  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1067  .  .  .  .  .  .  .  .  .  .  Kind: var
  1068  .  .  .  .  .  .  .  .  .  .  Name: "user"
  1069  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1060)
  1070  .  .  .  .  .  .  .  .  .  .  Data: nil
  1071  .  .  .  .  .  .  .  .  .  .  Type: nil
  1072  .  .  .  .  .  .  .  .  .  }
  1073  .  .  .  .  .  .  .  .  }
  1074  .  .  .  .  .  .  .  }
  1075  .  .  .  .  .  .  .  Type: *ast.StarExpr {
  1076  .  .  .  .  .  .  .  .  Star: 46:32
  1077  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1078  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1079  .  .  .  .  .  .  .  .  .  .  NamePos: 46:33
  1080  .  .  .  .  .  .  .  .  .  .  Name: "model"
  1081  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1082  .  .  .  .  .  .  .  .  .  }
  1083  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1084  .  .  .  .  .  .  .  .  .  .  NamePos: 46:39
  1085  .  .  .  .  .  .  .  .  .  .  Name: "User"
  1086  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1087  .  .  .  .  .  .  .  .  .  }
  1088  .  .  .  .  .  .  .  .  }
  1089  .  .  .  .  .  .  .  }
  1090  .  .  .  .  .  .  .  Tag: nil
  1091  .  .  .  .  .  .  .  Comment: nil
  1092  .  .  .  .  .  .  }
  1093  .  .  .  .  .  }
  1094  .  .  .  .  .  Closing: 46:43
  1095  .  .  .  .  }
  1096  .  .  .  .  Results: *ast.FieldList {
  1097  .  .  .  .  .  Opening: -
  1098  .  .  .  .  .  List: []*ast.Field (len = 1) {
  1099  .  .  .  .  .  .  0: *ast.Field {
  1100  .  .  .  .  .  .  .  Doc: nil
  1101  .  .  .  .  .  .  .  Names: nil
  1102  .  .  .  .  .  .  .  Type: *ast.StarExpr {
  1103  .  .  .  .  .  .  .  .  Star: 46:45
  1104  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1105  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1106  .  .  .  .  .  .  .  .  .  .  NamePos: 46:46
  1107  .  .  .  .  .  .  .  .  .  .  Name: "model"
  1108  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1109  .  .  .  .  .  .  .  .  .  }
  1110  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1111  .  .  .  .  .  .  .  .  .  .  NamePos: 46:52
  1112  .  .  .  .  .  .  .  .  .  .  Name: "User"
  1113  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1114  .  .  .  .  .  .  .  .  .  }
  1115  .  .  .  .  .  .  .  .  }
  1116  .  .  .  .  .  .  .  }
  1117  .  .  .  .  .  .  .  Tag: nil
  1118  .  .  .  .  .  .  .  Comment: nil
  1119  .  .  .  .  .  .  }
  1120  .  .  .  .  .  }
  1121  .  .  .  .  .  Closing: -
  1122  .  .  .  .  }
  1123  .  .  .  }
  1124  .  .  .  Body: *ast.BlockStmt {
  1125  .  .  .  .  Lbrace: 46:57
  1126  .  .  .  .  List: []ast.Stmt (len = 2) {
  1127  .  .  .  .  .  0: *ast.ExprStmt {
  1128  .  .  .  .  .  .  X: *ast.CallExpr {
  1129  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1130  .  .  .  .  .  .  .  .  NamePos: 47:2
  1131  .  .  .  .  .  .  .  .  Name: "Select"
  1132  .  .  .  .  .  .  .  .  Obj: nil
  1133  .  .  .  .  .  .  .  }
  1134  .  .  .  .  .  .  .  Lparen: 47:8
  1135  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1136  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1137  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1138  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1139  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1140  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1141  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1142  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1143  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1144  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 47:9
  1145  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "SQL"
  1146  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1147  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1148  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 47:12
  1149  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: nil
  1150  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1151  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 47:13
  1152  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1153  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1154  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 48:3
  1155  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Stmt"
  1156  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1157  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1158  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1159  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 48:7
  1160  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1161  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  1162  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 48:8
  1163  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1164  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"SELECT * FROM t_user\""
  1165  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1166  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1167  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1168  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 48:30
  1169  .  .  .  .  .  .  .  .  .  .  .  .  }
  1170  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1171  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 49:3
  1172  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Where"
  1173  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1174  .  .  .  .  .  .  .  .  .  .  .  .  }
  1175  .  .  .  .  .  .  .  .  .  .  .  }
  1176  .  .  .  .  .  .  .  .  .  .  .  Lparen: 49:8
  1177  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1178  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1179  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1180  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1181  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1182  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 49:9
  1183  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "If"
  1184  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1185  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1186  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 49:11
  1187  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  1188  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  1189  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1190  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1191  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 49:12
  1192  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "user"
  1193  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1066)
  1194  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1195  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1196  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 49:17
  1197  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Username"
  1198  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1199  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1200  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1201  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: 49:26
  1202  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !=
  1203  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  1204  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 49:29
  1205  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1206  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\""
  1207  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1208  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1209  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
  1210  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 49:33
  1211  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1212  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"username = #{user.Username}\""
  1213  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1214  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1215  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1216  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 49:62
  1217  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1218  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1219  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 50:4
  1220  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "If"
  1221  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1222  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1223  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1224  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 50:6
  1225  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  1226  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  1227  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1228  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1229  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 50:7
  1230  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "user"
  1231  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1066)
  1232  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1233  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1234  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 50:12
  1235  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Address"
  1236  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1237  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1238  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1239  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: 50:20
  1240  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !=
  1241  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  1242  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 50:23
  1243  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1244  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\""
  1245  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1246  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1247  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
  1248  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 50:27
  1249  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1250  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"address = #{user.Address}\""
  1251  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1252  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1253  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1254  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 50:54
  1255  .  .  .  .  .  .  .  .  .  .  .  .  }
  1256  .  .  .  .  .  .  .  .  .  .  .  }
  1257  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1258  .  .  .  .  .  .  .  .  .  .  .  Rparen: 50:55
  1259  .  .  .  .  .  .  .  .  .  .  }
  1260  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1261  .  .  .  .  .  .  .  .  .  .  .  NamePos: 51:3
  1262  .  .  .  .  .  .  .  .  .  .  .  Name: "Build"
  1263  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1264  .  .  .  .  .  .  .  .  .  .  }
  1265  .  .  .  .  .  .  .  .  .  }
  1266  .  .  .  .  .  .  .  .  .  Lparen: 51:8
  1267  .  .  .  .  .  .  .  .  .  Args: nil
  1268  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1269  .  .  .  .  .  .  .  .  .  Rparen: 51:9
  1270  .  .  .  .  .  .  .  .  }
  1271  .  .  .  .  .  .  .  }
  1272  .  .  .  .  .  .  .  Ellipsis: -
  1273  .  .  .  .  .  .  .  Rparen: 51:10
  1274  .  .  .  .  .  .  }
  1275  .  .  .  .  .  }
  1276  .  .  .  .  .  1: *ast.ExprStmt {
  1277  .  .  .  .  .  .  X: *ast.CallExpr {
  1278  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1279  .  .  .  .  .  .  .  .  NamePos: 52:2
  1280  .  .  .  .  .  .  .  .  Name: "panic"
  1281  .  .  .  .  .  .  .  .  Obj: nil
  1282  .  .  .  .  .  .  .  }
  1283  .  .  .  .  .  .  .  Lparen: 52:7
  1284  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1285  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  1286  .  .  .  .  .  .  .  .  .  ValuePos: 52:8
  1287  .  .  .  .  .  .  .  .  .  Kind: STRING
  1288  .  .  .  .  .  .  .  .  .  Value: "\"\""
  1289  .  .  .  .  .  .  .  .  }
  1290  .  .  .  .  .  .  .  }
  1291  .  .  .  .  .  .  .  Ellipsis: -
  1292  .  .  .  .  .  .  .  Rparen: 52:10
  1293  .  .  .  .  .  .  }
  1294  .  .  .  .  .  }
  1295  .  .  .  .  }
  1296  .  .  .  .  Rbrace: 53:1
  1297  .  .  .  }
  1298  .  .  }
  1299  .  .  8: *ast.FuncDecl {
  1300  .  .  .  Doc: nil
  1301  .  .  .  Recv: *ast.FieldList {
  1302  .  .  .  .  Opening: 55:6
  1303  .  .  .  .  List: []*ast.Field (len = 1) {
  1304  .  .  .  .  .  0: *ast.Field {
  1305  .  .  .  .  .  .  Doc: nil
  1306  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1307  .  .  .  .  .  .  .  0: *ast.Ident {
  1308  .  .  .  .  .  .  .  .  NamePos: 55:7
  1309  .  .  .  .  .  .  .  .  Name: "m"
  1310  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1311  .  .  .  .  .  .  .  .  .  Kind: var
  1312  .  .  .  .  .  .  .  .  .  Name: "m"
  1313  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1304)
  1314  .  .  .  .  .  .  .  .  .  Data: nil
  1315  .  .  .  .  .  .  .  .  .  Type: nil
  1316  .  .  .  .  .  .  .  .  }
  1317  .  .  .  .  .  .  .  }
  1318  .  .  .  .  .  .  }
  1319  .  .  .  .  .  .  Type: *ast.StarExpr {
  1320  .  .  .  .  .  .  .  Star: 55:9
  1321  .  .  .  .  .  .  .  X: *ast.Ident {
  1322  .  .  .  .  .  .  .  .  NamePos: 55:10
  1323  .  .  .  .  .  .  .  .  Name: "UserMapper"
  1324  .  .  .  .  .  .  .  .  Obj: *(obj @ 84)
  1325  .  .  .  .  .  .  .  }
  1326  .  .  .  .  .  .  }
  1327  .  .  .  .  .  .  Tag: nil
  1328  .  .  .  .  .  .  Comment: nil
  1329  .  .  .  .  .  }
  1330  .  .  .  .  }
  1331  .  .  .  .  Closing: 55:20
  1332  .  .  .  }
  1333  .  .  .  Name: *ast.Ident {
  1334  .  .  .  .  NamePos: 55:22
  1335  .  .  .  .  Name: "BatchAdd"
  1336  .  .  .  .  Obj: nil
  1337  .  .  .  }
  1338  .  .  .  Type: *ast.FuncType {
  1339  .  .  .  .  Func: 55:1
  1340  .  .  .  .  TypeParams: nil
  1341  .  .  .  .  Params: *ast.FieldList {
  1342  .  .  .  .  .  Opening: 55:30
  1343  .  .  .  .  .  List: []*ast.Field (len = 1) {
  1344  .  .  .  .  .  .  0: *ast.Field {
  1345  .  .  .  .  .  .  .  Doc: nil
  1346  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1347  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1348  .  .  .  .  .  .  .  .  .  NamePos: 55:31
  1349  .  .  .  .  .  .  .  .  .  Name: "users"
  1350  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1351  .  .  .  .  .  .  .  .  .  .  Kind: var
  1352  .  .  .  .  .  .  .  .  .  .  Name: "users"
  1353  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1344)
  1354  .  .  .  .  .  .  .  .  .  .  Data: nil
  1355  .  .  .  .  .  .  .  .  .  .  Type: nil
  1356  .  .  .  .  .  .  .  .  .  }
  1357  .  .  .  .  .  .  .  .  }
  1358  .  .  .  .  .  .  .  }
  1359  .  .  .  .  .  .  .  Type: *ast.ArrayType {
  1360  .  .  .  .  .  .  .  .  Lbrack: 55:37
  1361  .  .  .  .  .  .  .  .  Len: nil
  1362  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
  1363  .  .  .  .  .  .  .  .  .  Star: 55:39
  1364  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1365  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1366  .  .  .  .  .  .  .  .  .  .  .  NamePos: 55:40
  1367  .  .  .  .  .  .  .  .  .  .  .  Name: "model"
  1368  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1369  .  .  .  .  .  .  .  .  .  .  }
  1370  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1371  .  .  .  .  .  .  .  .  .  .  .  NamePos: 55:46
  1372  .  .  .  .  .  .  .  .  .  .  .  Name: "User"
  1373  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1374  .  .  .  .  .  .  .  .  .  .  }
  1375  .  .  .  .  .  .  .  .  .  }
  1376  .  .  .  .  .  .  .  .  }
  1377  .  .  .  .  .  .  .  }
  1378  .  .  .  .  .  .  .  Tag: nil
  1379  .  .  .  .  .  .  .  Comment: nil
  1380  .  .  .  .  .  .  }
  1381  .  .  .  .  .  }
  1382  .  .  .  .  .  Closing: 55:50
  1383  .  .  .  .  }
  1384  .  .  .  .  Results: nil
  1385  .  .  .  }
  1386  .  .  .  Body: *ast.BlockStmt {
  1387  .  .  .  .  Lbrace: 55:52
  1388  .  .  .  .  List: []ast.Stmt (len = 1) {
  1389  .  .  .  .  .  0: *ast.ExprStmt {
  1390  .  .  .  .  .  .  X: *ast.CallExpr {
  1391  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1392  .  .  .  .  .  .  .  .  NamePos: 56:2
  1393  .  .  .  .  .  .  .  .  Name: "Insert"
  1394  .  .  .  .  .  .  .  .  Obj: nil
  1395  .  .  .  .  .  .  .  }
  1396  .  .  .  .  .  .  .  Lparen: 56:8
  1397  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1398  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1399  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1400  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1401  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1402  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1403  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1404  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1405  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1406  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 56:9
  1407  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "SQL"
  1408  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1409  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1410  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 56:12
  1411  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: nil
  1412  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1413  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 56:13
  1414  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1415  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1416  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 57:3
  1417  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Stmt"
  1418  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1419  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1420  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1421  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 57:7
  1422  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1423  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  1424  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 57:8
  1425  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1426  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"INSERT INTO t_user (id, username, password, create_at, email, address) VALUES \""
  1427  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1428  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1429  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1430  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 57:88
  1431  .  .  .  .  .  .  .  .  .  .  .  .  }
  1432  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1433  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 58:3
  1434  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Foreach"
  1435  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1436  .  .  .  .  .  .  .  .  .  .  .  .  }
  1437  .  .  .  .  .  .  .  .  .  .  .  }
  1438  .  .  .  .  .  .  .  .  .  .  .  Lparen: 58:10
  1439  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 6) {
  1440  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  1441  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 58:11
  1442  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1443  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"users\""
  1444  .  .  .  .  .  .  .  .  .  .  .  .  }
  1445  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
  1446  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 58:20
  1447  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1448  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"user\""
  1449  .  .  .  .  .  .  .  .  .  .  .  .  }
  1450  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {
  1451  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 58:28
  1452  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1453  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\" \""
  1454  .  .  .  .  .  .  .  .  .  .  .  .  }
  1455  .  .  .  .  .  .  .  .  .  .  .  .  3: *ast.BasicLit {
  1456  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 58:33
  1457  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1458  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\""
  1459  .  .  .  .  .  .  .  .  .  .  .  .  }
  1460  .  .  .  .  .  .  .  .  .  .  .  .  4: *ast.BasicLit {
  1461  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 58:37
  1462  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1463  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\""
  1464  .  .  .  .  .  .  .  .  .  .  .  .  }
  1465  .  .  .  .  .  .  .  .  .  .  .  .  5: *ast.BasicLit {
  1466  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 59:4
  1467  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1468  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"(#{user.Id}, #{user.Username}, #{user.Password}, #{user.CreateAt}, #{user.Email}, #{user.Address})\""
  1469  .  .  .  .  .  .  .  .  .  .  .  .  }
  1470  .  .  .  .  .  .  .  .  .  .  .  }
  1471  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1472  .  .  .  .  .  .  .  .  .  .  .  Rparen: 59:104
  1473  .  .  .  .  .  .  .  .  .  .  }
  1474  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1475  .  .  .  .  .  .  .  .  .  .  .  NamePos: 59:106
  1476  .  .  .  .  .  .  .  .  .  .  .  Name: "Build"
  1477  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1478  .  .  .  .  .  .  .  .  .  .  }
  1479  .  .  .  .  .  .  .  .  .  }
  1480  .  .  .  .  .  .  .  .  .  Lparen: 59:111
  1481  .  .  .  .  .  .  .  .  .  Args: nil
  1482  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1483  .  .  .  .  .  .  .  .  .  Rparen: 59:112
  1484  .  .  .  .  .  .  .  .  }
  1485  .  .  .  .  .  .  .  }
  1486  .  .  .  .  .  .  .  Ellipsis: -
  1487  .  .  .  .  .  .  .  Rparen: 59:113
  1488  .  .  .  .  .  .  }
  1489  .  .  .  .  .  }
  1490  .  .  .  .  }
  1491  .  .  .  .  Rbrace: 60:1
  1492  .  .  .  }
  1493  .  .  }
  1494  .  .  9: *ast.FuncDecl {
  1495  .  .  .  Doc: nil
  1496  .  .  .  Recv: *ast.FieldList {
  1497  .  .  .  .  Opening: 62:6
  1498  .  .  .  .  List: []*ast.Field (len = 1) {
  1499  .  .  .  .  .  0: *ast.Field {
  1500  .  .  .  .  .  .  Doc: nil
  1501  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1502  .  .  .  .  .  .  .  0: *ast.Ident {
  1503  .  .  .  .  .  .  .  .  NamePos: 62:7
  1504  .  .  .  .  .  .  .  .  Name: "m"
  1505  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1506  .  .  .  .  .  .  .  .  .  Kind: var
  1507  .  .  .  .  .  .  .  .  .  Name: "m"
  1508  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1499)
  1509  .  .  .  .  .  .  .  .  .  Data: nil
  1510  .  .  .  .  .  .  .  .  .  Type: nil
  1511  .  .  .  .  .  .  .  .  }
  1512  .  .  .  .  .  .  .  }
  1513  .  .  .  .  .  .  }
  1514  .  .  .  .  .  .  Type: *ast.StarExpr {
  1515  .  .  .  .  .  .  .  Star: 62:9
  1516  .  .  .  .  .  .  .  X: *ast.Ident {
  1517  .  .  .  .  .  .  .  .  NamePos: 62:10
  1518  .  .  .  .  .  .  .  .  Name: "UserMapper"
  1519  .  .  .  .  .  .  .  .  Obj: *(obj @ 84)
  1520  .  .  .  .  .  .  .  }
  1521  .  .  .  .  .  .  }
  1522  .  .  .  .  .  .  Tag: nil
  1523  .  .  .  .  .  .  Comment: nil
  1524  .  .  .  .  .  }
  1525  .  .  .  .  }
  1526  .  .  .  .  Closing: 62:20
  1527  .  .  .  }
  1528  .  .  .  Name: *ast.Ident {
  1529  .  .  .  .  NamePos: 62:22
  1530  .  .  .  .  Name: "UpdateByIdOrUsername"
  1531  .  .  .  .  Obj: nil
  1532  .  .  .  }
  1533  .  .  .  Type: *ast.FuncType {
  1534  .  .  .  .  Func: 62:1
  1535  .  .  .  .  TypeParams: nil
  1536  .  .  .  .  Params: *ast.FieldList {
  1537  .  .  .  .  .  Opening: 62:42
  1538  .  .  .  .  .  List: []*ast.Field (len = 1) {
  1539  .  .  .  .  .  .  0: *ast.Field {
  1540  .  .  .  .  .  .  .  Doc: nil
  1541  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1542  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1543  .  .  .  .  .  .  .  .  .  NamePos: 62:43
  1544  .  .  .  .  .  .  .  .  .  Name: "user"
  1545  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1546  .  .  .  .  .  .  .  .  .  .  Kind: var
  1547  .  .  .  .  .  .  .  .  .  .  Name: "user"
  1548  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1539)
  1549  .  .  .  .  .  .  .  .  .  .  Data: nil
  1550  .  .  .  .  .  .  .  .  .  .  Type: nil
  1551  .  .  .  .  .  .  .  .  .  }
  1552  .  .  .  .  .  .  .  .  }
  1553  .  .  .  .  .  .  .  }
  1554  .  .  .  .  .  .  .  Type: *ast.StarExpr {
  1555  .  .  .  .  .  .  .  .  Star: 62:48
  1556  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1557  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1558  .  .  .  .  .  .  .  .  .  .  NamePos: 62:49
  1559  .  .  .  .  .  .  .  .  .  .  Name: "model"
  1560  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1561  .  .  .  .  .  .  .  .  .  }
  1562  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1563  .  .  .  .  .  .  .  .  .  .  NamePos: 62:55
  1564  .  .  .  .  .  .  .  .  .  .  Name: "User"
  1565  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1566  .  .  .  .  .  .  .  .  .  }
  1567  .  .  .  .  .  .  .  .  }
  1568  .  .  .  .  .  .  .  }
  1569  .  .  .  .  .  .  .  Tag: nil
  1570  .  .  .  .  .  .  .  Comment: nil
  1571  .  .  .  .  .  .  }
  1572  .  .  .  .  .  }
  1573  .  .  .  .  .  Closing: 62:59
  1574  .  .  .  .  }
  1575  .  .  .  .  Results: nil
  1576  .  .  .  }
  1577  .  .  .  Body: *ast.BlockStmt {
  1578  .  .  .  .  Lbrace: 62:61
  1579  .  .  .  .  List: []ast.Stmt (len = 1) {
  1580  .  .  .  .  .  0: *ast.ExprStmt {
  1581  .  .  .  .  .  .  X: *ast.CallExpr {
  1582  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1583  .  .  .  .  .  .  .  .  NamePos: 63:2
  1584  .  .  .  .  .  .  .  .  Name: "Update"
  1585  .  .  .  .  .  .  .  .  Obj: nil
  1586  .  .  .  .  .  .  .  }
  1587  .  .  .  .  .  .  .  Lparen: 63:8
  1588  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1589  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1590  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1591  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1592  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1593  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1594  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1595  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1596  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1597  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1598  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1599  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 63:9
  1600  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "SQL"
  1601  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1602  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1603  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 63:12
  1604  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: nil
  1605  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1606  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 63:13
  1607  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1608  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1609  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 64:3
  1610  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Stmt"
  1611  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1612  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1613  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1614  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 64:7
  1615  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1616  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  1617  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 64:8
  1618  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1619  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"UPDATE t_user\""
  1620  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1621  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1622  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1623  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 64:23
  1624  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1625  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1626  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 65:3
  1627  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Set"
  1628  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1629  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1630  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1631  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 65:6
  1632  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1633  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1634  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1635  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1636  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1637  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 65:7
  1638  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "If"
  1639  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1640  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1641  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 65:9
  1642  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  1643  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  1644  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1645  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1646  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 65:10
  1647  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "user"
  1648  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1545)
  1649  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1650  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1651  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 65:15
  1652  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Password"
  1653  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1654  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1655  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1656  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: 65:24
  1657  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !=
  1658  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  1659  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 65:27
  1660  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1661  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\""
  1662  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1663  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1664  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
  1665  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 65:31
  1666  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1667  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"password = #{user.Password}\""
  1668  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1669  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1670  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1671  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 65:60
  1672  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1673  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1674  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 66:4
  1675  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "If"
  1676  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1677  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1678  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1679  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 66:6
  1680  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  1681  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  1682  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1683  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1684  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 66:7
  1685  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "user"
  1686  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1545)
  1687  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1688  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1689  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 66:12
  1690  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Email"
  1691  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1692  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1693  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1694  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: 66:18
  1695  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !=
  1696  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  1697  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 66:21
  1698  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1699  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\""
  1700  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1701  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1702  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
  1703  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 66:25
  1704  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1705  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"email = #{user.Email}\""
  1706  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1707  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1708  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1709  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 66:48
  1710  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1711  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1712  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1713  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 66:49
  1714  .  .  .  .  .  .  .  .  .  .  .  .  }
  1715  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1716  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 67:3
  1717  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Where"
  1718  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1719  .  .  .  .  .  .  .  .  .  .  .  .  }
  1720  .  .  .  .  .  .  .  .  .  .  .  }
  1721  .  .  .  .  .  .  .  .  .  .  .  Lparen: 67:8
  1722  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1723  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1724  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1725  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1726  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1727  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1728  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1729  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 67:9
  1730  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Choose"
  1731  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1732  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1733  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 67:15
  1734  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: nil
  1735  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1736  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 67:16
  1737  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1738  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1739  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 67:18
  1740  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "When"
  1741  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1742  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1743  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1744  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 67:22
  1745  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  1746  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  1747  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1748  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1749  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 67:23
  1750  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "user"
  1751  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1545)
  1752  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1753  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1754  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 67:28
  1755  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Id"
  1756  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1757  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1758  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1759  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: 67:31
  1760  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: >
  1761  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  1762  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 67:33
  1763  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: INT
  1764  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "0"
  1765  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1766  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1767  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
  1768  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 67:36
  1769  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1770  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"id = #{user.Id}\""
  1771  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1772  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1773  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1774  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 67:53
  1775  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1776  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1777  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 68:4
  1778  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "When"
  1779  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1780  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1781  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1782  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 68:8
  1783  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  1784  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  1785  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1786  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1787  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 68:9
  1788  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "user"
  1789  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1545)
  1790  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1791  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1792  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 68:14
  1793  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Username"
  1794  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1795  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1796  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1797  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: 68:23
  1798  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !=
  1799  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  1800  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 68:26
  1801  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1802  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\""
  1803  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1804  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1805  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
  1806  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 68:30
  1807  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  1808  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"username = #{user.Username}\""
  1809  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1810  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1811  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1812  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 68:59
  1813  .  .  .  .  .  .  .  .  .  .  .  .  }
  1814  .  .  .  .  .  .  .  .  .  .  .  }
  1815  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1816  .  .  .  .  .  .  .  .  .  .  .  Rparen: 68:60
  1817  .  .  .  .  .  .  .  .  .  .  }
  1818  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1819  .  .  .  .  .  .  .  .  .  .  .  NamePos: 69:3
  1820  .  .  .  .  .  .  .  .  .  .  .  Name: "Build"
  1821  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1822  .  .  .  .  .  .  .  .  .  .  }
  1823  .  .  .  .  .  .  .  .  .  }
  1824  .  .  .  .  .  .  .  .  .  Lparen: 69:8
  1825  .  .  .  .  .  .  .  .  .  Args: nil
  1826  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1827  .  .  .  .  .  .  .  .  .  Rparen: 69:9
  1828  .  .  .  .  .  .  .  .  }
  1829  .  .  .  .  .  .  .  }
  1830  .  .  .  .  .  .  .  Ellipsis: -
  1831  .  .  .  .  .  .  .  Rparen: 69:10
  1832  .  .  .  .  .  .  }
  1833  .  .  .  .  .  }
  1834  .  .  .  .  }
  1835  .  .  .  .  Rbrace: 70:1
  1836  .  .  .  }
  1837  .  .  }
  1838  .  .  10: *ast.FuncDecl {
  1839  .  .  .  Doc: nil
  1840  .  .  .  Recv: *ast.FieldList {
  1841  .  .  .  .  Opening: 72:6
  1842  .  .  .  .  List: []*ast.Field (len = 1) {
  1843  .  .  .  .  .  0: *ast.Field {
  1844  .  .  .  .  .  .  Doc: nil
  1845  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1846  .  .  .  .  .  .  .  0: *ast.Ident {
  1847  .  .  .  .  .  .  .  .  NamePos: 72:7
  1848  .  .  .  .  .  .  .  .  Name: "u"
  1849  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1850  .  .  .  .  .  .  .  .  .  Kind: var
  1851  .  .  .  .  .  .  .  .  .  Name: "u"
  1852  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1843)
  1853  .  .  .  .  .  .  .  .  .  Data: nil
  1854  .  .  .  .  .  .  .  .  .  Type: nil
  1855  .  .  .  .  .  .  .  .  }
  1856  .  .  .  .  .  .  .  }
  1857  .  .  .  .  .  .  }
  1858  .  .  .  .  .  .  Type: *ast.StarExpr {
  1859  .  .  .  .  .  .  .  Star: 72:9
  1860  .  .  .  .  .  .  .  X: *ast.Ident {
  1861  .  .  .  .  .  .  .  .  NamePos: 72:10
  1862  .  .  .  .  .  .  .  .  Name: "UserMapper"
  1863  .  .  .  .  .  .  .  .  Obj: *(obj @ 84)
  1864  .  .  .  .  .  .  .  }
  1865  .  .  .  .  .  .  }
  1866  .  .  .  .  .  .  Tag: nil
  1867  .  .  .  .  .  .  Comment: nil
  1868  .  .  .  .  .  }
  1869  .  .  .  .  }
  1870  .  .  .  .  Closing: 72:20
  1871  .  .  .  }
  1872  .  .  .  Name: *ast.Ident {
  1873  .  .  .  .  NamePos: 72:22
  1874  .  .  .  .  Name: "SelectPage"
  1875  .  .  .  .  Obj: nil
  1876  .  .  .  }
  1877  .  .  .  Type: *ast.FuncType {
  1878  .  .  .  .  Func: 72:1
  1879  .  .  .  .  TypeParams: nil
  1880  .  .  .  .  Params: *ast.FieldList {
  1881  .  .  .  .  .  Opening: 72:32
  1882  .  .  .  .  .  List: []*ast.Field (len = 2) {
  1883  .  .  .  .  .  .  0: *ast.Field {
  1884  .  .  .  .  .  .  .  Doc: nil
  1885  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1886  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1887  .  .  .  .  .  .  .  .  .  NamePos: 72:33
  1888  .  .  .  .  .  .  .  .  .  Name: "page"
  1889  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1890  .  .  .  .  .  .  .  .  .  .  Kind: var
  1891  .  .  .  .  .  .  .  .  .  .  Name: "page"
  1892  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1883)
  1893  .  .  .  .  .  .  .  .  .  .  Data: nil
  1894  .  .  .  .  .  .  .  .  .  .  Type: nil
  1895  .  .  .  .  .  .  .  .  .  }
  1896  .  .  .  .  .  .  .  .  }
  1897  .  .  .  .  .  .  .  }
  1898  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
  1899  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1900  .  .  .  .  .  .  .  .  .  NamePos: 72:38
  1901  .  .  .  .  .  .  .  .  .  Name: "vulcan"
  1902  .  .  .  .  .  .  .  .  .  Obj: nil
  1903  .  .  .  .  .  .  .  .  }
  1904  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1905  .  .  .  .  .  .  .  .  .  NamePos: 72:45
  1906  .  .  .  .  .  .  .  .  .  Name: "Page"
  1907  .  .  .  .  .  .  .  .  .  Obj: nil
  1908  .  .  .  .  .  .  .  .  }
  1909  .  .  .  .  .  .  .  }
  1910  .  .  .  .  .  .  .  Tag: nil
  1911  .  .  .  .  .  .  .  Comment: nil
  1912  .  .  .  .  .  .  }
  1913  .  .  .  .  .  .  1: *ast.Field {
  1914  .  .  .  .  .  .  .  Doc: nil
  1915  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
  1916  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1917  .  .  .  .  .  .  .  .  .  NamePos: 72:51
  1918  .  .  .  .  .  .  .  .  .  Name: "cond"
  1919  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
  1920  .  .  .  .  .  .  .  .  .  .  Kind: var
  1921  .  .  .  .  .  .  .  .  .  .  Name: "cond"
  1922  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 1913)
  1923  .  .  .  .  .  .  .  .  .  .  Data: nil
  1924  .  .  .  .  .  .  .  .  .  .  Type: nil
  1925  .  .  .  .  .  .  .  .  .  }
  1926  .  .  .  .  .  .  .  .  }
  1927  .  .  .  .  .  .  .  }
  1928  .  .  .  .  .  .  .  Type: *ast.StarExpr {
  1929  .  .  .  .  .  .  .  .  Star: 72:56
  1930  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1931  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1932  .  .  .  .  .  .  .  .  .  .  NamePos: 72:57
  1933  .  .  .  .  .  .  .  .  .  .  Name: "model"
  1934  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1935  .  .  .  .  .  .  .  .  .  }
  1936  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1937  .  .  .  .  .  .  .  .  .  .  NamePos: 72:63
  1938  .  .  .  .  .  .  .  .  .  .  Name: "QueryCond"
  1939  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1940  .  .  .  .  .  .  .  .  .  }
  1941  .  .  .  .  .  .  .  .  }
  1942  .  .  .  .  .  .  .  }
  1943  .  .  .  .  .  .  .  Tag: nil
  1944  .  .  .  .  .  .  .  Comment: nil
  1945  .  .  .  .  .  .  }
  1946  .  .  .  .  .  }
  1947  .  .  .  .  .  Closing: 72:72
  1948  .  .  .  .  }
  1949  .  .  .  .  Results: *ast.FieldList {
  1950  .  .  .  .  .  Opening: -
  1951  .  .  .  .  .  List: []*ast.Field (len = 1) {
  1952  .  .  .  .  .  .  0: *ast.Field {
  1953  .  .  .  .  .  .  .  Doc: nil
  1954  .  .  .  .  .  .  .  Names: nil
  1955  .  .  .  .  .  .  .  Type: *ast.ArrayType {
  1956  .  .  .  .  .  .  .  .  Lbrack: 72:74
  1957  .  .  .  .  .  .  .  .  Len: nil
  1958  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
  1959  .  .  .  .  .  .  .  .  .  Star: 72:76
  1960  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1961  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1962  .  .  .  .  .  .  .  .  .  .  .  NamePos: 72:77
  1963  .  .  .  .  .  .  .  .  .  .  .  Name: "model"
  1964  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1965  .  .  .  .  .  .  .  .  .  .  }
  1966  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1967  .  .  .  .  .  .  .  .  .  .  .  NamePos: 72:83
  1968  .  .  .  .  .  .  .  .  .  .  .  Name: "User"
  1969  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1970  .  .  .  .  .  .  .  .  .  .  }
  1971  .  .  .  .  .  .  .  .  .  }
  1972  .  .  .  .  .  .  .  .  }
  1973  .  .  .  .  .  .  .  }
  1974  .  .  .  .  .  .  .  Tag: nil
  1975  .  .  .  .  .  .  .  Comment: nil
  1976  .  .  .  .  .  .  }
  1977  .  .  .  .  .  }
  1978  .  .  .  .  .  Closing: -
  1979  .  .  .  .  }
  1980  .  .  .  }
  1981  .  .  .  Body: *ast.BlockStmt {
  1982  .  .  .  .  Lbrace: 72:88
  1983  .  .  .  .  List: []ast.Stmt (len = 2) {
  1984  .  .  .  .  .  0: *ast.ExprStmt {
  1985  .  .  .  .  .  .  X: *ast.CallExpr {
  1986  .  .  .  .  .  .  .  Fun: *ast.Ident {
  1987  .  .  .  .  .  .  .  .  NamePos: 73:2
  1988  .  .  .  .  .  .  .  .  Name: "Select"
  1989  .  .  .  .  .  .  .  .  Obj: nil
  1990  .  .  .  .  .  .  .  }
  1991  .  .  .  .  .  .  .  Lparen: 73:8
  1992  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  1993  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  1994  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1995  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1996  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1997  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1998  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1999  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  2000  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  2001  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 73:9
  2002  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "SQL"
  2003  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2004  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2005  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 73:12
  2006  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: nil
  2007  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2008  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 73:13
  2009  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2010  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2011  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 74:3
  2012  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Stmt"
  2013  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2014  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2015  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2016  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 74:7
  2017  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  2018  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
  2019  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 74:8
  2020  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  2021  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"SELECT * FROM t_user\""
  2022  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2023  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2024  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2025  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 74:30
  2026  .  .  .  .  .  .  .  .  .  .  .  .  }
  2027  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2028  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 75:3
  2029  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Where"
  2030  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2031  .  .  .  .  .  .  .  .  .  .  .  .  }
  2032  .  .  .  .  .  .  .  .  .  .  .  }
  2033  .  .  .  .  .  .  .  .  .  .  .  Lparen: 75:8
  2034  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
  2035  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
  2036  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  2037  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  2038  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
  2039  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 75:9
  2040  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "If"
  2041  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2042  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2043  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 75:11
  2044  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  2045  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  2046  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  2047  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2048  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 75:12
  2049  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "cond"
  2050  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1919)
  2051  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2052  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2053  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 75:17
  2054  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Username"
  2055  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2056  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2057  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2058  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: 75:26
  2059  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !=
  2060  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  2061  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 75:29
  2062  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  2063  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\""
  2064  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2065  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2066  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
  2067  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 75:33
  2068  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  2069  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"And username = #{cond.Username}\""
  2070  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2071  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2072  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2073  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 75:66
  2074  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2075  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2076  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 76:4
  2077  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "If"
  2078  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2079  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2080  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2081  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 76:6
  2082  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  2083  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
  2084  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  2085  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  2086  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 76:7
  2087  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "cond"
  2088  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 1919)
  2089  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2090  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2091  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 76:12
  2092  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Address"
  2093  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2094  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2095  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2096  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: 76:20
  2097  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !=
  2098  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.BasicLit {
  2099  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 76:23
  2100  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  2101  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\""
  2102  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2103  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2104  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
  2105  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 76:27
  2106  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
  2107  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"AND address = #{cond.Address} \""
  2108  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2109  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  2110  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2111  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 76:59
  2112  .  .  .  .  .  .  .  .  .  .  .  .  }
  2113  .  .  .  .  .  .  .  .  .  .  .  }
  2114  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2115  .  .  .  .  .  .  .  .  .  .  .  Rparen: 76:60
  2116  .  .  .  .  .  .  .  .  .  .  }
  2117  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  2118  .  .  .  .  .  .  .  .  .  .  .  NamePos: 76:62
  2119  .  .  .  .  .  .  .  .  .  .  .  Name: "Build"
  2120  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  2121  .  .  .  .  .  .  .  .  .  .  }
  2122  .  .  .  .  .  .  .  .  .  }
  2123  .  .  .  .  .  .  .  .  .  Lparen: 76:67
  2124  .  .  .  .  .  .  .  .  .  Args: nil
  2125  .  .  .  .  .  .  .  .  .  Ellipsis: -
  2126  .  .  .  .  .  .  .  .  .  Rparen: 76:68
  2127  .  .  .  .  .  .  .  .  }
  2128  .  .  .  .  .  .  .  }
  2129  .  .  .  .  .  .  .  Ellipsis: -
  2130  .  .  .  .  .  .  .  Rparen: 76:69
  2131  .  .  .  .  .  .  }
  2132  .  .  .  .  .  }
  2133  .  .  .  .  .  1: *ast.ReturnStmt {
  2134  .  .  .  .  .  .  Return: 77:2
  2135  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
  2136  .  .  .  .  .  .  .  0: *ast.Ident {
  2137  .  .  .  .  .  .  .  .  NamePos: 77:9
  2138  .  .  .  .  .  .  .  .  Name: "nil"
  2139  .  .  .  .  .  .  .  .  Obj: nil
  2140  .  .  .  .  .  .  .  }
  2141  .  .  .  .  .  .  }
  2142  .  .  .  .  .  }
  2143  .  .  .  .  }
  2144  .  .  .  .  Rbrace: 78:1
  2145  .  .  .  }
  2146  .  .  }
  2147  .  }
  2148  .  FileStart: 1:1
  2149  .  FileEnd: 78:3
  2150  .  Scope: *ast.Scope {
  2151  .  .  Outer: nil
  2152  .  .  Objects: map[string]*ast.Object (len = 2) {
  2153  .  .  .  "NewUserMapper": *(obj @ 148)
  2154  .  .  .  "UserMapper": *(obj @ 84)
  2155  .  .  }
  2156  .  }
  2157  .  Imports: []*ast.ImportSpec (len = 4) {
  2158  .  .  0: *(obj @ 22)
  2159  .  .  1: *(obj @ 33)
  2160  .  .  2: *(obj @ 44)
  2161  .  .  3: *(obj @ 59)
  2162  .  }
  2163  .  Unresolved: []*ast.Ident (len = 38) {
  2164  .  .  0: *(obj @ 117)
  2165  .  .  1: *(obj @ 180)
  2166  .  .  2: *(obj @ 323)
  2167  .  .  3: *(obj @ 348)
  2168  .  .  4: *(obj @ 429)
  2169  .  .  5: *(obj @ 446)
  2170  .  .  6: *(obj @ 463)
  2171  .  .  7: *(obj @ 557)
  2172  .  .  8: *(obj @ 581)
  2173  .  .  9: *(obj @ 613)
  2174  .  .  10: *(obj @ 622)
  2175  .  .  11: *(obj @ 638)
  2176  .  .  12: *(obj @ 678)
  2177  .  .  13: *(obj @ 940)
  2178  .  .  14: *(obj @ 960)
  2179  .  .  15: *(obj @ 984)
  2180  .  .  16: *(obj @ 1004)
  2181  .  .  17: *(obj @ 1078)
  2182  .  .  18: *(obj @ 1105)
  2183  .  .  19: *(obj @ 1129)
  2184  .  .  20: *(obj @ 1143)
  2185  .  .  21: *(obj @ 1181)
  2186  .  .  22: *(obj @ 1278)
  2187  .  .  23: *(obj @ 1365)
  2188  .  .  24: *(obj @ 1391)
  2189  .  .  25: *(obj @ 1405)
  2190  .  .  26: *(obj @ 1557)
  2191  .  .  27: *(obj @ 1582)
  2192  .  .  28: *(obj @ 1598)
  2193  .  .  29: *(obj @ 1636)
  2194  .  .  30: *(obj @ 1728)
  2195  .  .  31: *(obj @ 1899)
  2196  .  .  32: *(obj @ 1931)
  2197  .  .  33: *(obj @ 1961)
  2198  .  .  34: *(obj @ 1986)
  2199  .  .  35: *(obj @ 2000)
  2200  .  .  36: *(obj @ 2038)
  2201  .  .  37: *(obj @ 2136)
  2202  .  }
  2203  .  Comments: []*ast.CommentGroup (len = 1) {
  2204  .  .  0: *(obj @ 10)
  2205  .  }
  2206  .  GoVersion: ""
  2207  }
